// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "RCABench Team",
            "email": "team@rcabench.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/algorithms": {
            "get": {
                "description": "获取系统中所有可用的算法列表，包括算法的镜像信息、标签和更新时间。只返回状态为激活的算法容器",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "algorithm"
                ],
                "summary": "获取算法列表",
                "responses": {
                    "200": {
                        "description": "成功返回算法列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_ListAlgorithmsResp"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "description": "批量提交算法执行任务，支持多个算法和数据集的组合执行。系统将为每个执行任务分配唯一的 TraceID 用于跟踪任务状态和结果",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "algorithm"
                ],
                "summary": "提交算法执行任务",
                "parameters": [
                    {
                        "description": "算法执行请求列表，包含算法名称、数据集和环境变量",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ExecutionPayload"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "成功提交算法执行任务，返回任务跟踪信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SubmitResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如JSON格式不正确、算法名称或数据集名称无效、环境变量名称不支持等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/analyzers/injections": {
            "get": {
                "description": "使用多种筛选条件分析故障注入数据，返回包括效率、多样性、种子之间的距离等统计信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analyzer"
                ],
                "summary": "分析故障注入数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "项目名称过滤",
                        "name": "project_name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "dev",
                            "prod"
                        ],
                        "type": "string",
                        "default": "prod",
                        "description": "环境标签过滤",
                        "name": "env",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "批次标签过滤",
                        "name": "batch",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "train",
                            "test"
                        ],
                        "type": "string",
                        "default": "train",
                        "description": "分类标签过滤",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "clickhouse"
                        ],
                        "type": "string",
                        "default": "clickhouse",
                        "description": "基准测试类型过滤",
                        "name": "benchmark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "状态过滤，具体值参考字段映射接口(/mapping)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "故障类型过滤，具体值参考字段映射接口(/mapping)",
                        "name": "fault_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回故障注入分析统计信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_AnalyzeInjectionsResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如参数格式不正确、验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/analyzers/traces": {
            "get": {
                "description": "使用多种筛选条件分析链路数据，返回包括故障注入结束链路在内的统计信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trace"
                ],
                "summary": "分析链路数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "首任务类型筛选",
                        "name": "first_task_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回链路分析统计信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_TraceStats"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如参数格式不正确、验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/containers": {
            "post": {
                "description": "通过上传文件、指定GitHub仓库或Harbor镜像来构建Docker镜像。支持zip和tar.gz格式的文件上传，或从GitHub仓库自动拉取代码进行构建，或从Harbor直接获取已存在的镜像并更新数据库。系统会自动验证必需文件（Dockerfile）并设置执行权限",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container"
                ],
                "summary": "提交镜像构建任务",
                "parameters": [
                    {
                        "enum": [
                            "algorithm",
                            "benchmark"
                        ],
                        "type": "string",
                        "default": "algorithm",
                        "description": "容器类型，指定容器的用途",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "容器名称，用于标识容器，将作为镜像构建的标识符，默认使用info.toml中的name字段",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Docker镜像名称。当source_type为harbor时，指定Harbor中已存在的镜像名称；其他情况下支持以下格式：1) image-name（自动添加默认Harbor地址和命名空间）2) namespace/image-name（自动添加默认Harbor地址）",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "latest",
                        "description": "Docker镜像标签。当source_type为harbor时，指定Harbor中已存在的镜像标签；其他情况下用于版本控制",
                        "name": "tag",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "bash /entrypoint.sh",
                        "description": "Docker镜像启动命令，默认为bash /entrypoint.sh",
                        "name": "command",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "环境变量名称列表，支持多个环境变量",
                        "name": "env_vars",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "file",
                            "github",
                            "harbor"
                        ],
                        "type": "string",
                        "default": "file",
                        "description": "构建源类型，指定源码来源",
                        "name": "source_type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "源码文件（支持zip或tar.gz格式），当source_type为file时必需，文件大小限制5MB",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "GitHub访问令牌，用于访问私有仓库，公开仓库可不提供",
                        "name": "github_token",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "GitHub仓库地址，格式：owner/repo，当source_type为github时必需",
                        "name": "github_repo",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "main",
                        "description": "GitHub分支名，指定要构建的分支",
                        "name": "github_branch",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "GitHub commit哈希值（支持短hash），如果指定commit则忽略branch参数",
                        "name": "github_commit",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": ".",
                        "description": "仓库内的子目录路径，如果源码不在根目录",
                        "name": "github_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": ".",
                        "description": "Docker构建上下文路径，相对于源码根目录",
                        "name": "context_dir",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "Dockerfile",
                        "description": "Dockerfile路径，相对于源码根目录",
                        "name": "dockerfile_path",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Dockerfile构建目标（multi-stage build时使用）",
                        "name": "target",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "是否强制重新构建镜像，忽略缓存",
                        "name": "force_rebuild",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "成功提交容器构建任务，返回任务跟踪信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SubmitResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误：文件格式不支持（仅支持zip、tar.gz）、文件大小超限（5MB）、参数验证失败、GitHub仓库地址无效、Harbor镜像参数无效、force_rebuild值格式错误等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "资源不存在：构建上下文路径不存在、缺少必需文件（Dockerfile、entrypoint.sh）、Harbor中镜像不存在",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/datasets": {
            "post": {
                "description": "根据指定的时间范围和基准测试容器批量构建数据集。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dataset"
                ],
                "summary": "批量构建数据集",
                "parameters": [
                    {
                        "description": "数据集构建请求列表，每个请求包含数据集名称、时间范围、基准测试和环境变量配置",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DatasetBuildPayload"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "成功提交数据集构建任务，返回任务组ID和跟踪信息列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SubmitResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误：1) JSON格式不正确 2) 数据集名称为空 3) 时间范围无效 4) 基准测试不存在 5) 环境变量名称不支持",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除数据集数据",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dataset"
                ],
                "summary": "删除数据集数据",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "数据集名称列表",
                        "name": "names",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetDeleteResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/datasets/download": {
            "get": {
                "description": "将指定的多个数据集打包为 ZIP 文件下载，自动排除 result.csv 和检测器结论文件。支持按组ID或数据集名称进行下载，两种方式二选一。下载文件结构：按组ID下载时为 datasets/{groupId}/{datasetName}/...，按名称下载时为 datasets/{datasetName}/...",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "dataset"
                ],
                "summary": "下载数据集打包文件",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "任务组ID列表，格式：group1,group2,group3。与names参数二选一，优先使用group_ids",
                        "name": "group_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "数据集名称列表，格式：dataset1,dataset2,dataset3。与group_ids参数二选一",
                        "name": "names",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP 文件流，Content-Disposition 头中包含文件名 datasets.zip",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误：1) 参数绑定失败 2) 两个参数都为空 3) 同时提供两种参数",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "权限错误：请求访问的数据集路径不在系统允许的范围内",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/debug/ns/status": {
            "get": {
                "description": "获取命名空间锁状态信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "获取命名空间锁状态",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/evaluations/executions": {
            "get": {
                "description": "获取所有ExecutionResult中status为ExecutionSuccess的记录，支持时间区间筛选和数量筛选",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "evaluation"
                ],
                "summary": "获取成功执行的算法记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "开始时间，格式：2006-01-02T15:04:05Z07:00",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "结束时间，格式：2006-01-02T15:04:05Z07:00",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "数量限制",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "偏移量，用于分页",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回成功执行的算法记录列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SuccessfulExecutionsResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/evaluations/groundtruth": {
            "post": {
                "description": "根据数据集数组获取对应的 ground truth 数据，用于算法评估的基准数据。支持批量查询多个数据集的真实标签信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "evaluation"
                ],
                "summary": "获取数据集的 ground truth",
                "parameters": [
                    {
                        "description": "Ground truth查询请求，包含数据集列表",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroundTruthReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回数据集的ground truth信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_GroundTruthResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如JSON格式不正确、数据集数组为空",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/evaluations/raw-data": {
            "post": {
                "description": "支持三种查询模式：1) 直接传入算法-数据集对数组进行精确查询；2) 传入算法和数据集列表进行笛卡尔积查询；3) 通过执行ID列表查询。三种模式互斥，只能选择其中一种",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "evaluation"
                ],
                "summary": "获取原始评估数据",
                "parameters": [
                    {
                        "description": "原始数据查询请求，支持三种模式：pairs数组、(algorithms+datasets)笛卡尔积、或execution_ids列表",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RawDataReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回原始评估数据列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RawDataResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如JSON格式不正确、查询模式冲突或参数为空",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections": {
            "get": {
                "description": "支持排序、过滤的故障注入记录查询接口。返回数据库原始记录列表，不进行数据转换。",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取故障注入记录列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "项目名称过滤",
                        "name": "project_name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "dev",
                            "prod"
                        ],
                        "type": "string",
                        "default": "prod",
                        "description": "环境标签过滤",
                        "name": "env",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "批次标签过滤",
                        "name": "batch",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "train",
                            "test"
                        ],
                        "type": "string",
                        "default": "train",
                        "description": "分类标签过滤",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "clickhouse"
                        ],
                        "type": "string",
                        "default": "clickhouse",
                        "description": "基准测试类型过滤",
                        "name": "benchmark",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "状态过滤，具体值参考字段映射接口(/mapping)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "故障类型过滤，具体值参考字段映射接口(/mapping)",
                        "name": "fault_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at",
                        "description": "排序字段，默认created_at",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "排序方式，默认desc",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "结果数量限制，用于控制返回记录数量",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "分页查询，页码",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "分页查询，每页数量",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回故障注入记录列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_ListInjectionsResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如参数格式不正确、验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "description": "提交故障注入任务，支持批量提交多个故障配置，系统会自动去重并返回提交结果",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "提交故障注入任务",
                "parameters": [
                    {
                        "description": "故障注入请求体",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitInjectionReq"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "成功提交故障注入任务",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SubmitInjectionResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如JSON格式不正确、参数验证失败或算法无效等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/analysis/no-issues": {
            "get": {
                "description": "根据时间范围查询所有没有问题的故障注入记录列表，返回包含配置信息的详细记录",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "查询没有问题的故障注入记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "环境标签过滤",
                        "name": "env",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "批次标签过滤",
                        "name": "batch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回没有问题的故障注入记录列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-array_dto_FaultInjectionNoIssuesResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如时间格式不正确或参数验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/analysis/stats": {
            "get": {
                "description": "获取故障注入记录的统计信息，包括有问题、没有问题和总记录数量",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取故障注入统计信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回故障注入统计信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_InjectionStatsResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如时间格式不正确或参数验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/analysis/with-issues": {
            "get": {
                "description": "根据时间范围查询所有有问题的故障注入记录列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "查询有问题的故障注入记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "环境标签过滤",
                        "name": "env",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "批次标签过滤",
                        "name": "batch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-array_dto_FaultInjectionWithIssuesResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如时间格式不正确或参数验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/conf": {
            "get": {
                "description": "获取指定命名空间的故障注入配置信息，支持不同显示模式的配置树结构",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取故障注入配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间，指定要获取配置的命名空间",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "display",
                            "engine"
                        ],
                        "type": "string",
                        "default": "engine",
                        "description": "显示模式",
                        "name": "mode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回配置树结构",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-handler_Node"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如命名空间或模式参数缺失",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/configs": {
            "get": {
                "description": "根据多个TraceID获取对应的故障注入配置信息，用于查看已提交的故障注入任务的配置详情",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取已注入故障配置列表",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "TraceID列表，支持多个值，用于查询对应的配置信息",
                        "name": "trace_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回配置列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如TraceID参数缺失或格式不正确",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/mapping": {
            "get": {
                "description": "获取状态和故障类型的字符串与数字映射关系，用于前端显示和API参数验证",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取字段映射关系",
                "responses": {
                    "200": {
                        "description": "成功返回字段映射关系",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_InjectionFieldMappingResp"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/ns-resources": {
            "get": {
                "description": "获取所有命名空间及其对应的资源信息映射，或查询指定命名空间的资源信息。返回命名空间到资源的映射表，用于故障注入配置和资源管理",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "获取命名空间资源映射",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间名称，不指定时返回所有命名空间的资源映射",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "指定命名空间时返回该命名空间的资源信息",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-handler_Resources"
                        }
                    },
                    "404": {
                        "description": "指定的命名空间不存在",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误，无法获取资源映射",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/query": {
            "get": {
                "description": "根据名称或任务ID查询故障注入记录详情，两个参数至少提供一个",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "查询单个故障注入记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "故障注入名称",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "任务ID",
                        "name": "task_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回故障注入记录详情",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_QueryInjectionResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如参数缺失、格式不正确或验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/injections/{task_id}/cancel": {
            "put": {
                "description": "取消指定的故障注入任务",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "injection"
                ],
                "summary": "取消故障注入任务",
                "parameters": [
                    {
                        "type": "string",
                        "description": "任务ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_InjectCancelResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "description": "根据多种条件分页获取任务列表。支持按任务ID、跟踪ID、组ID进行精确查询，或按任务类型、状态等进行过滤查询",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "获取任务列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "任务ID - 精确匹配特定任务 (与trace_id、group_id互斥)",
                        "name": "task_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "跟踪ID - 查找属于同一跟踪的所有任务 (与task_id、group_id互斥)",
                        "name": "trace_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "组ID - 查找属于同一组的所有任务 (与task_id、trace_id互斥)",
                        "name": "group_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "RestartService",
                            "FaultInjection",
                            "BuildDataset",
                            "RunAlgorithm",
                            "CollectResult",
                            "BuildImage"
                        ],
                        "type": "string",
                        "description": "任务类型过滤",
                        "name": "task_type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Pending",
                            "Running",
                            "Completed",
                            "Error",
                            "Cancelled",
                            "Scheduled",
                            "Rescheduled"
                        ],
                        "type": "string",
                        "description": "任务状态过滤",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "是否立即执行 - true:立即执行任务, false:延时执行任务",
                        "name": "immediate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at",
                        "description": "排序字段，默认created_at",
                        "name": "sort_field",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "排序方式，默认desc",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "结果数量限制，用于控制返回记录数量",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义开始时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "自定义结束时间，RFC3339格式，当lookback=custom时必需",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回故障注入记录列表",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_ListTasksResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误，如参数格式不正确、验证失败等",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/queue": {
            "get": {
                "description": "分页获取队列中等待执行的任务列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "获取队列中的任务",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "页码",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "每页大小",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_PaginationResp-dto_UnifiedTask"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{task_id}": {
            "get": {
                "description": "根据任务ID获取任务详细信息,包括任务基本信息和执行日志",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "获取任务详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "任务ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_TaskDetailResp"
                        }
                    },
                    "400": {
                        "description": "无效的任务ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "任务不存在",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v1/traces/completed": {
            "get": {
                "description": "根据指定的时间范围获取完成状态的链路",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trace"
                ],
                "summary": "获取完成状态的链路",
                "parameters": [
                    {
                        "type": "string",
                        "description": "相对时间查询，如 1h, 24h, 7d或者是custom",
                        "name": "lookback",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "当lookback=custom时必需，自定义开始时间(RFC3339格式)",
                        "name": "custom_start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "当lookback=custom时必需，自定义结束时间(RFC3339格式)",
                        "name": "custom_end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_GetCompletedMapResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/algorithms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a simple list of all active algorithms without complex filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Algorithms"
                ],
                "summary": "List algorithms",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Algorithms retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_AlgorithmResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/algorithms/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search algorithms with complex filtering, sorting and pagination. Algorithms are containers with type 'algorithm'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Algorithms"
                ],
                "summary": "Search algorithms",
                "parameters": [
                    {
                        "description": "Algorithm search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AlgorithmSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Algorithms retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_AlgorithmResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/audit": {
            "get": {
                "description": "Get paginated list of audit logs with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "List audit logs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by resource",
                        "name": "resource",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by success status",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter from date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter to date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit logs retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_AuditLogListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new audit log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Create audit log",
                "parameters": [
                    {
                        "description": "Audit log data",
                        "name": "audit_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuditLogRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Audit log created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_AuditLogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/audit/{id}": {
            "get": {
                "description": "Get a specific audit log entry by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get audit log by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Audit log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit log retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_AuditLogResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Audit log not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change password for authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password change request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid old password",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/login": {
            "post": {
                "description": "Authenticate user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/logout": {
            "post": {
                "description": "Logout user and invalidate token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "description": "Logout request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get profile information for authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/refresh": {
            "post": {
                "description": "Refresh an existing JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "parameters": [
                    {
                        "description": "Token refresh request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TokenRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_TokenRefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/auth/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/containers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a simple list of containers with basic filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "List containers",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "algorithm",
                            "benchmark"
                        ],
                        "type": "string",
                        "description": "Container type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Container status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Containers retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_ContainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/containers/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search containers with complex filtering, sorting and pagination. Supports all container types (algorithm, benchmark, etc.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Search containers",
                "parameters": [
                    {
                        "description": "Container search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Containers retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_ContainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/containers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific container",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Get container by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Container ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Container retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_ContainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid container ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Container not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/datasets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of datasets with filtering and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "List datasets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20, max 100)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by project ID",
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by dataset type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by public status",
                        "name": "is_public",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in name and description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (id,name,created_at,updated_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc,desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Include related data (project,injections,labels)",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Datasets retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new dataset with optional injection and label associations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Create dataset",
                "parameters": [
                    {
                        "description": "Dataset creation request",
                        "name": "dataset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatasetV2CreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Dataset created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "409": {
                        "description": "Dataset already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/datasets/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Advanced search for datasets with complex filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Search datasets",
                "parameters": [
                    {
                        "description": "Search criteria",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatasetV2SearchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/datasets/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific dataset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Get dataset by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Include related data (project,injections,labels)",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid dataset ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update dataset information, injection and label associations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Update dataset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset update request",
                        "name": "dataset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatasetV2UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete a dataset (sets status to -1)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Delete dataset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid dataset ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/datasets/{id}/injections": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add or remove injection associations for a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Manage dataset injections",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Injection management request",
                        "name": "manage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatasetV2InjectionManageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Injections managed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/datasets/{id}/labels": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add, remove labels or create new labels for a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Manage dataset labels",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Label management request",
                        "name": "manage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DatasetV2LabelManageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Labels managed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_DatasetV2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/health": {
            "get": {
                "description": "Get system health status and service information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "System health check",
                "responses": {
                    "200": {
                        "description": "Health check successful",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/monitor/info": {
            "get": {
                "description": "Get basic system information and status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get system information",
                "responses": {
                    "200": {
                        "description": "System info retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SystemInfo"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/monitor/metrics": {
            "post": {
                "description": "Query monitoring metrics for system performance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get monitoring metrics",
                "parameters": [
                    {
                        "description": "Metrics query request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MonitoringQueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_MonitoringMetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of permissions with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "List permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by resource ID",
                        "name": "resource_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by system permission",
                        "name": "is_system",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by permission name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_PermissionListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new permission with specified resource and action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "Permission creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_PermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "409": {
                        "description": "Permission already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions/resource/{resource_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of permissions associated with a specific resource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permissions by resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource ID",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-array_dto_PermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid resource ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search permissions with complex filtering and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Search permissions",
                "parameters": [
                    {
                        "description": "Permission search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_PermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_PermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid permission ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update permission information (partial update supported)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_PermissionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a permission (soft delete by setting status to -1)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid permission ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Cannot delete system permission",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/permissions/{id}/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of roles that have been assigned a specific permission",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-array_dto_RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid permission ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of relationships with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "List relationships",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Relationship type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Source entity type",
                        "name": "source_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Target entity type",
                        "name": "target_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Source entity ID",
                        "name": "source_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Target entity ID",
                        "name": "target_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relations retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RelationListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations/batch": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform multiple relationship operations in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Batch relationship operations",
                "parameters": [
                    {
                        "description": "Batch relation operations request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchRelationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch operations completed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations/role-permissions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign multiple permissions to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Assign permissions to role",
                "parameters": [
                    {
                        "description": "Role permission assignment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignRolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role or permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove multiple permissions from a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Remove permissions from role",
                "parameters": [
                    {
                        "description": "Role permission removal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveRolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions removed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations/statistics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about all relationship types in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Get relationship statistics",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RelationStatisticsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations/user-permissions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a permission directly to a user (with optional project scope)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Assign permission to user",
                "parameters": [
                    {
                        "description": "User permission assignment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignUserPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission assigned successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User or permission not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a permission directly from a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Remove permission from user",
                "parameters": [
                    {
                        "description": "User permission removal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveUserPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission removed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/relations/user-roles": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a role to a user (global role assignment)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Assign role to user",
                "parameters": [
                    {
                        "description": "User role assignment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User or role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a role from a user (global role removal)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Relations"
                ],
                "summary": "Remove role from user",
                "parameters": [
                    {
                        "description": "User role removal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemoveUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role removed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User or role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of roles with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by system role",
                        "name": "is_system",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RoleListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new role with specified permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "409": {
                        "description": "Role already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/roles/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search roles with complex filtering and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Search roles",
                "parameters": [
                    {
                        "description": "Role search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RoleSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/roles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update role information (partial update supported)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a role (soft delete by setting status to -1)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid role ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Cannot delete system role",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/roles/{id}/permissions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign multiple permissions to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Assign permissions to role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission assignment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignPermissionToRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove multiple permissions from a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Remove permissions from role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Permission removal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RemovePermissionFromRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions removed successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/roles/{id}/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of users assigned to a specific role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get role users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-array_dto_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid role ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/statistics": {
            "get": {
                "description": "Get comprehensive system statistics and metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get system statistics",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SystemStatisticsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a simple list of tasks with basic filtering via query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by task ID",
                        "name": "task_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by trace ID",
                        "name": "trace_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group ID",
                        "name": "group_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "RestartService",
                            "FaultInjection",
                            "BuildDataset",
                            "RunAlgorithm",
                            "CollectResult",
                            "BuildImage"
                        ],
                        "type": "string",
                        "description": "Filter by task type",
                        "name": "task_type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Pending",
                            "Running",
                            "Completed",
                            "Error",
                            "Cancelled",
                            "Scheduled",
                            "Rescheduled"
                        ],
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by immediate execution",
                        "name": "immediate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/queue": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get tasks in queue (ready and delayed) with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get queued tasks",
                "parameters": [
                    {
                        "description": "Search request with pagination",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queued tasks retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search tasks with complex filtering, sorting and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Search tasks",
                "parameters": [
                    {
                        "description": "Task search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TaskSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific task including logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Include additional data (logs)",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_TaskDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of users with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by full name",
                        "name": "full_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user account with specified details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/users/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search users with complex filtering and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "description": "User search request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_SearchResponse-dto_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information (partial update supported)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-dto_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user (soft delete by setting status to -1)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/users/{id}/projects": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a user to a project with a specific role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Assign user to project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project assignment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AssignUserToProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User assigned to project successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        },
        "/api/v2/users/{id}/projects/{project_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a user from a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Remove user from project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User removed from project successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.GenericResponse-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "consts.TaskType": {
            "type": "string",
            "enum": [
                "RestartService",
                "RunAlgorithm",
                "FaultInjection",
                "BuildImage",
                "BuildDataset",
                "CollectResult"
            ],
            "x-enum-varnames": [
                "TaskTypeRestartService",
                "TaskTypeRunAlgorithm",
                "TaskTypeFaultInjection",
                "TaskTypeBuildImage",
                "TaskTypeBuildDataset",
                "TaskTypeCollectResult"
            ]
        },
        "database.Container": {
            "type": "object",
            "properties": {
                "command": {
                    "description": "启动命令",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "env_vars": {
                    "description": "环境变量名称列表",
                    "type": "string"
                },
                "id": {
                    "description": "唯一标识",
                    "type": "integer"
                },
                "image": {
                    "description": "镜像名",
                    "type": "string"
                },
                "is_public": {
                    "description": "是否公开可见",
                    "type": "boolean"
                },
                "name": {
                    "description": "名称",
                    "type": "string"
                },
                "project": {
                    "description": "外键关联",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Project"
                        }
                    ]
                },
                "project_id": {
                    "description": "容器必须属于某个项目",
                    "type": "integer"
                },
                "status": {
                    "description": "0: 已删除 1: 活跃",
                    "type": "boolean"
                },
                "tag": {
                    "description": "镜像标签",
                    "type": "string"
                },
                "type": {
                    "description": "镜像类型",
                    "type": "string"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "database.FaultInjectionSchedule": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "description": "基准数据库，添加索引",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间，添加时间索引",
                    "type": "string"
                },
                "description": {
                    "description": "描述（可选字段）",
                    "type": "string"
                },
                "display_config": {
                    "description": "面向用户的展示配置",
                    "type": "string"
                },
                "end_time": {
                    "description": "预计故障结束时间，添加时间索引",
                    "type": "string"
                },
                "engine_config": {
                    "description": "面向系统的运行配置",
                    "type": "string"
                },
                "fault_type": {
                    "description": "故障类型，添加复合索引",
                    "type": "integer"
                },
                "id": {
                    "description": "唯一标识",
                    "type": "integer"
                },
                "injection_name": {
                    "description": "在k8s资源里注入的名字",
                    "type": "string"
                },
                "pre_duration": {
                    "description": "正常数据时间",
                    "type": "integer"
                },
                "start_time": {
                    "description": "预计故障开始时间，添加时间索引",
                    "type": "string"
                },
                "status": {
                    "description": "状态，添加复合索引",
                    "type": "integer"
                },
                "task": {
                    "description": "外键关联",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Task"
                        }
                    ]
                },
                "task_id": {
                    "description": "从属什么 taskid，添加复合索引",
                    "type": "string"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "database.Label": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "标签分类 (dataset, fault_injection, algorithm, container等)",
                    "type": "string"
                },
                "color": {
                    "description": "标签颜色 (hex格式)",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "description": {
                    "description": "标签描述",
                    "type": "string"
                },
                "id": {
                    "description": "唯一标识",
                    "type": "integer"
                },
                "is_system": {
                    "description": "是否为系统标签",
                    "type": "boolean"
                },
                "key": {
                    "description": "标签键",
                    "type": "string"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                },
                "usage": {
                    "description": "使用次数",
                    "type": "integer"
                },
                "value": {
                    "description": "标签值",
                    "type": "string"
                }
            }
        },
        "database.Project": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "description": "是否公开可见",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "0:禁用 1:启用 -1:删除",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "添加时间索引",
                    "type": "string"
                },
                "cron_expr": {
                    "type": "string"
                },
                "execute_time": {
                    "description": "添加执行时间索引",
                    "type": "integer"
                },
                "group_id": {
                    "description": "添加组ID索引",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "immediate": {
                    "type": "boolean"
                },
                "payload": {
                    "type": "string"
                },
                "project": {
                    "description": "外键关联",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Project"
                        }
                    ]
                },
                "project_id": {
                    "description": "任务必须属于某个项目",
                    "type": "integer"
                },
                "status": {
                    "description": "添加多个复合索引",
                    "type": "string"
                },
                "trace_id": {
                    "description": "添加追踪ID索引",
                    "type": "string"
                },
                "type": {
                    "description": "添加复合索引",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.AdvancedSearchRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AlgorithmDatasetPair": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "dataset": {
                    "type": "string"
                }
            }
        },
        "dto.AlgorithmItem": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "dto.AlgorithmResponse": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "description": "Related entities (only included when specifically requested)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    ]
                },
                "project_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.AlgorithmSearchRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "image": {
                    "type": "string"
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "name": {
                    "description": "Algorithm-specific filters",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AnalyzeInjectionsResp": {
            "type": "object",
            "properties": {
                "efficiency": {
                    "type": "string"
                },
                "stats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.InjectionStats"
                    }
                }
            }
        },
        "dto.AssignPermissionToRoleRequest": {
            "type": "object"
        },
        "dto.AssignRolePermissionRequest": {
            "type": "object"
        },
        "dto.AssignUserPermissionRequest": {
            "type": "object",
            "required": [
                "grant_type",
                "permission_id",
                "user_id"
            ],
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "grant_type": {
                    "type": "string",
                    "enum": [
                        "grant",
                        "deny"
                    ],
                    "example": "grant"
                },
                "permission_id": {
                    "type": "integer",
                    "example": 1
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AssignUserRoleRequest": {
            "type": "object",
            "required": [
                "role_id",
                "user_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer",
                    "example": 2
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AssignUserToProjectRequest": {
            "type": "object",
            "required": [
                "project_id",
                "role_id"
            ],
            "properties": {
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "role_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "dto.AttributeCoverageItem": {
            "type": "object",
            "properties": {
                "coverage": {
                    "type": "number"
                },
                "num": {
                    "type": "integer"
                }
            }
        },
        "dto.AuditLogListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AuditLogResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.AuditLogRequest": {
            "type": "object",
            "required": [
                "action",
                "resource"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "example": "CREATE_USER"
                },
                "details": {
                    "type": "string",
                    "example": "{\"username\":\"newuser\"}"
                },
                "resource": {
                    "type": "string",
                    "example": "users"
                },
                "resource_id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "dto.AuditLogResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "CREATE_USER"
                },
                "details": {
                    "type": "string",
                    "example": "{\"username\":\"newuser\"}"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "ip_address": {
                    "type": "string",
                    "example": "192.168.1.100"
                },
                "resource": {
                    "type": "string",
                    "example": "users"
                },
                "resource_id": {
                    "type": "string",
                    "example": "123"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "user_agent": {
                    "type": "string",
                    "example": "Mozilla/5.0..."
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "dto.BatchRelationRequest": {
            "type": "object",
            "required": [
                "operations"
            ],
            "properties": {
                "operations": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.RelationOperation"
                    }
                }
            }
        },
        "dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "newpassword123"
                },
                "old_password": {
                    "type": "string",
                    "example": "oldpassword123"
                }
            }
        },
        "dto.ContainerResponse": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "description": "Related entities (only included when specifically requested)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    ]
                },
                "project_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerSearchRequest": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "image": {
                    "type": "string"
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "name": {
                    "description": "Container-specific filters",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ContainerStatistics": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer",
                    "example": 20
                },
                "deleted": {
                    "type": "integer",
                    "example": 5
                },
                "total": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "dto.CreatePermissionRequest": {
            "type": "object",
            "required": [
                "action",
                "display_name",
                "name",
                "resource_id"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "example": "read"
                },
                "description": {
                    "type": "string",
                    "example": "Permission to read dataset information"
                },
                "display_name": {
                    "type": "string",
                    "example": "Read Datasets"
                },
                "name": {
                    "type": "string",
                    "example": "read_datasets"
                },
                "resource_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.CreateRoleRequest": {
            "type": "object",
            "required": [
                "display_name",
                "name",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Role for data analysis operations"
                },
                "display_name": {
                    "type": "string",
                    "example": "Data Analyst"
                },
                "name": {
                    "type": "string",
                    "example": "data_analyst"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "system",
                        "custom"
                    ],
                    "example": "custom"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "username": {
                    "type": "string",
                    "example": "newuser"
                }
            }
        },
        "dto.DatasetBuildPayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "benchmark": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "pre_duration": {
                    "type": "integer"
                }
            }
        },
        "dto.DatasetDeleteResp": {
            "type": "object",
            "properties": {
                "failed_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success_count": {
                    "type": "integer"
                }
            }
        },
        "dto.DatasetSearchResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "结果列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2Response"
                    }
                },
                "pagination": {
                    "description": "分页信息",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.PaginationInfo"
                        }
                    ]
                }
            }
        },
        "dto.DatasetStatistics": {
            "type": "object",
            "properties": {
                "private": {
                    "type": "integer",
                    "example": 70
                },
                "public": {
                    "type": "integer",
                    "example": 30
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "total_size": {
                    "type": "integer",
                    "example": 1073741824
                }
            }
        },
        "dto.DatasetV2CreateReq": {
            "type": "object",
            "required": [
                "name",
                "project_id",
                "type"
            ],
            "properties": {
                "data_source": {
                    "description": "数据来源描述",
                    "type": "string",
                    "maxLength": 500
                },
                "description": {
                    "description": "数据集描述",
                    "type": "string",
                    "maxLength": 1000
                },
                "format": {
                    "description": "数据格式",
                    "type": "string",
                    "maxLength": 50
                },
                "injection_ids": {
                    "description": "关联的故障注入ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_public": {
                    "description": "是否公开，可选，默认false",
                    "type": "boolean"
                },
                "label_ids": {
                    "description": "关联的标签ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "description": "数据集名称",
                    "type": "string",
                    "maxLength": 255
                },
                "new_labels": {
                    "description": "新建标签列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2LabelCreateReq"
                    }
                },
                "project_id": {
                    "description": "项目ID",
                    "type": "integer",
                    "minimum": 1
                },
                "type": {
                    "description": "数据集类型",
                    "type": "string",
                    "maxLength": 50
                },
                "version": {
                    "description": "数据集版本，可选，默认v1.0",
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "dto.DatasetV2InjectionManageReq": {
            "type": "object",
            "properties": {
                "add_injections": {
                    "description": "要添加的故障注入ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "remove_injections": {
                    "description": "要移除的故障注入ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.DatasetV2InjectionRelationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "fault_injection": {
                    "description": "故障注入详情",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.FaultInjectionSchedule"
                        }
                    ]
                },
                "fault_injection_id": {
                    "description": "故障注入ID",
                    "type": "integer"
                },
                "id": {
                    "description": "关联ID",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "dto.DatasetV2LabelCreateReq": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "category": {
                    "description": "标签分类",
                    "type": "string",
                    "maxLength": 50
                },
                "color": {
                    "description": "标签颜色 (hex格式)",
                    "type": "string",
                    "maxLength": 7
                },
                "description": {
                    "description": "标签描述",
                    "type": "string",
                    "maxLength": 500
                },
                "key": {
                    "description": "标签键",
                    "type": "string",
                    "maxLength": 100
                },
                "value": {
                    "description": "标签值",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "dto.DatasetV2LabelManageReq": {
            "type": "object",
            "properties": {
                "add_labels": {
                    "description": "要添加的标签ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "new_labels": {
                    "description": "新建标签列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2LabelCreateReq"
                    }
                },
                "remove_labels": {
                    "description": "要移除的标签ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.DatasetV2Response": {
            "type": "object",
            "properties": {
                "checksum": {
                    "description": "文件校验和",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "data_source": {
                    "description": "数据来源描述",
                    "type": "string"
                },
                "description": {
                    "description": "数据集描述",
                    "type": "string"
                },
                "download_url": {
                    "description": "下载链接",
                    "type": "string"
                },
                "file_count": {
                    "description": "文件数量",
                    "type": "integer"
                },
                "format": {
                    "description": "数据格式",
                    "type": "string"
                },
                "id": {
                    "description": "唯一标识",
                    "type": "integer"
                },
                "injections": {
                    "description": "关联的故障注入",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2InjectionRelationResponse"
                    }
                },
                "is_public": {
                    "description": "是否公开",
                    "type": "boolean"
                },
                "labels": {
                    "description": "关联的标签",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Label"
                    }
                },
                "name": {
                    "description": "数据集名称",
                    "type": "string"
                },
                "project": {
                    "description": "关联项目信息",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Project"
                        }
                    ]
                },
                "project_id": {
                    "description": "项目ID",
                    "type": "integer"
                },
                "status": {
                    "description": "状态",
                    "type": "integer"
                },
                "type": {
                    "description": "数据集类型",
                    "type": "string"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                },
                "version": {
                    "description": "数据集版本",
                    "type": "string"
                }
            }
        },
        "dto.DatasetV2SearchReq": {
            "type": "object",
            "properties": {
                "date_range": {
                    "description": "时间范围过滤",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRangeFilter"
                        }
                    ]
                },
                "include": {
                    "description": "包含的关联数据",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_public": {
                    "description": "是否公开",
                    "type": "boolean"
                },
                "label_keys": {
                    "description": "按标签键过滤",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "label_values": {
                    "description": "按标签值过滤",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page": {
                    "description": "页码",
                    "type": "integer",
                    "minimum": 1
                },
                "project_ids": {
                    "description": "项目ID列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "search": {
                    "description": "搜索关键词",
                    "type": "string"
                },
                "size": {
                    "description": "每页大小",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "size_range": {
                    "description": "大小范围过滤",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SizeRangeFilter"
                        }
                    ]
                },
                "sort_by": {
                    "description": "排序字段",
                    "type": "string"
                },
                "sort_order": {
                    "description": "排序方向",
                    "type": "string"
                },
                "statuses": {
                    "description": "状态列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "types": {
                    "description": "数据集类型列表",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.DatasetV2UpdateReq": {
            "type": "object",
            "properties": {
                "data_source": {
                    "description": "数据来源描述",
                    "type": "string",
                    "maxLength": 500
                },
                "description": {
                    "description": "数据集描述",
                    "type": "string",
                    "maxLength": 1000
                },
                "format": {
                    "description": "数据格式",
                    "type": "string",
                    "maxLength": 50
                },
                "injection_ids": {
                    "description": "更新关联的故障注入ID列表（完全替换）",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "is_public": {
                    "description": "是否公开",
                    "type": "boolean"
                },
                "label_ids": {
                    "description": "更新关联的标签ID列表（完全替换）",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "description": "数据集名称",
                    "type": "string",
                    "maxLength": 255
                },
                "new_labels": {
                    "description": "新建标签列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2LabelCreateReq"
                    }
                },
                "type": {
                    "description": "数据集类型",
                    "type": "string",
                    "maxLength": 50
                },
                "version": {
                    "description": "数据集版本",
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "dto.DateRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "dto.DateRangeFilter": {
            "type": "object",
            "properties": {
                "end_time": {
                    "description": "结束时间",
                    "type": "string"
                },
                "start_time": {
                    "description": "开始时间",
                    "type": "string"
                }
            }
        },
        "dto.ExecutionPayload": {
            "type": "object",
            "required": [
                "algorithm",
                "dataset"
            ],
            "properties": {
                "algorithm": {
                    "$ref": "#/definitions/dto.AlgorithmItem"
                },
                "dataset": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object"
                }
            }
        },
        "dto.ExecutionStatistics": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 50
                },
                "successful": {
                    "type": "integer",
                    "example": 750
                },
                "total": {
                    "type": "integer",
                    "example": 800
                }
            }
        },
        "dto.FaultInjectionNoIssuesResp": {
            "type": "object",
            "properties": {
                "dataset_id": {
                    "type": "integer"
                },
                "engine_config": {
                    "$ref": "#/definitions/handler.Node"
                },
                "injection_name": {
                    "type": "string"
                }
            }
        },
        "dto.FaultInjectionWithIssuesResp": {
            "type": "object",
            "properties": {
                "abnormal_avg_duration": {
                    "type": "number"
                },
                "abnormal_p99": {
                    "type": "number"
                },
                "abnormal_succ_rate": {
                    "type": "number"
                },
                "dataset_id": {
                    "type": "integer"
                },
                "engine_config": {
                    "$ref": "#/definitions/handler.Node"
                },
                "injection_name": {
                    "type": "string"
                },
                "issues": {
                    "type": "string"
                },
                "normal_avg_duration": {
                    "type": "number"
                },
                "normal_p99": {
                    "type": "number"
                },
                "normal_succ_rate": {
                    "type": "number"
                }
            }
        },
        "dto.FilterOperator": {
            "type": "string",
            "enum": [
                "eq",
                "ne",
                "gt",
                "gte",
                "lt",
                "lte",
                "like",
                "starts",
                "ends",
                "nlike",
                "in",
                "nin",
                "null",
                "nnull",
                "deq",
                "dafter",
                "dbefore",
                "dbetween"
            ],
            "x-enum-comments": {
                "OpDateAfter": "DATE(field) \u003e DATE(value)",
                "OpDateBefore": "DATE(field) \u003c DATE(value)",
                "OpDateBetween": "DATE(field) BETWEEN date1 AND date2",
                "OpDateEqual": "DATE(field) = DATE(value)",
                "OpEndsWith": "LIKE %value",
                "OpEqual": "==",
                "OpGreater": "\u003e",
                "OpGreaterEq": "\u003e=",
                "OpIn": "IN (value1, value2, ...)",
                "OpIsNotNull": "IS NOT NULL",
                "OpIsNull": "IS NULL",
                "OpLess": "\u003c",
                "OpLessEq": "\u003c=",
                "OpLike": "LIKE %value%",
                "OpNotEqual": "!=",
                "OpNotIn": "NOT IN (value1, value2, ...)",
                "OpNotLike": "NOT LIKE %value%",
                "OpStartsWith": "LIKE value%"
            },
            "x-enum-varnames": [
                "OpEqual",
                "OpNotEqual",
                "OpGreater",
                "OpGreaterEq",
                "OpLess",
                "OpLessEq",
                "OpLike",
                "OpStartsWith",
                "OpEndsWith",
                "OpNotLike",
                "OpIn",
                "OpNotIn",
                "OpIsNull",
                "OpIsNotNull",
                "OpDateEqual",
                "OpDateAfter",
                "OpDateBefore",
                "OpDateBetween"
            ]
        },
        "dto.GenericResponse-any": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据"
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-array_dto_FaultInjectionNoIssuesResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FaultInjectionNoIssuesResp"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-array_dto_FaultInjectionWithIssuesResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FaultInjectionWithIssuesResp"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-array_dto_PermissionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PermissionResponse"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-array_dto_RoleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoleResponse"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-array_dto_UserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_AnalyzeInjectionsResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.AnalyzeInjectionsResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_AuditLogListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.AuditLogListResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_AuditLogResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.AuditLogResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_ContainerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ContainerResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_DatasetDeleteResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DatasetDeleteResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_DatasetSearchResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DatasetSearchResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_DatasetV2Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DatasetV2Response"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_GetCompletedMapResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.GetCompletedMapResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_GroundTruthResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.GroundTruthResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_HealthCheckResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.HealthCheckResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_InjectCancelResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.InjectCancelResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_InjectionFieldMappingResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.InjectionFieldMappingResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_InjectionStatsResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.InjectionStatsResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_ListAlgorithmsResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Container"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_ListInjectionsResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ListInjectionsResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_ListTasksResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Task"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_MonitoringMetricsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.MonitoringMetricsResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_NsResourcesResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.NsResourcesResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_PaginationResp-dto_UnifiedTask": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.PaginationResp-dto_UnifiedTask"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_PermissionListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.PermissionListResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_PermissionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.PermissionResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_QueryInjectionResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.QueryInjectionResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_RawDataResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RawDataItem"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_RelationListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.RelationListResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_RelationStatisticsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.RelationStatisticsResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_RoleListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.RoleListResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_RoleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.RoleResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_AlgorithmResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_AlgorithmResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_ContainerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_ContainerResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_DatasetV2Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_DatasetV2Response"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_PermissionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_PermissionResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_RoleResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_RoleResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_TaskResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_TaskResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SearchResponse-dto_UserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SearchResponse-dto_UserResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SubmitInjectionResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SubmitInjectionResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SubmitResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SubmitResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SuccessfulExecutionsResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SuccessfulExecutionItem"
                    }
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SystemInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SystemInfo"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_SystemStatisticsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SystemStatisticsResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_TaskDetailResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.TaskDetailResp"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_TaskDetailResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.TaskDetailResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_TokenRefreshResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.TokenRefreshResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_TraceStats": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.TraceStats"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_UserInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_UserListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserListResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-dto_UserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-handler_Node": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handler.Node"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GenericResponse-handler_Resources": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态码",
                    "type": "integer"
                },
                "data": {
                    "description": "泛型类型的数据",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handler.Resources"
                        }
                    ]
                },
                "message": {
                    "description": "响应消息",
                    "type": "string"
                },
                "timestamp": {
                    "description": "响应生成时间",
                    "type": "integer"
                }
            }
        },
        "dto.GetCompletedMapResp": {
            "type": "object",
            "properties": {
                "has_anomaly": {
                    "description": "检测到异常的链路ID列表",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "no_anomaly": {
                    "description": "没有异常的链路ID列表",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.GranularityRecord": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "level": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "dto.GroundTruthReq": {
            "type": "object",
            "required": [
                "datasets"
            ],
            "properties": {
                "datasets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.GroundTruthResp": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/handler.Groundtruth"
            }
        },
        "dto.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.ServiceInfo"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "uptime": {
                    "type": "string",
                    "example": "72h30m15s"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "dto.InjectCancelResp": {
            "type": "object"
        },
        "dto.InjectionDiversity": {
            "type": "object",
            "properties": {
                "attribute_coverages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/dto.AttributeCoverageItem"
                        }
                    }
                },
                "fault_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "fault_service_coverages": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.ServiceCoverageItem"
                    }
                },
                "pair_distribution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PairStats"
                    }
                },
                "service_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.InjectionFieldMappingResp": {
            "type": "object",
            "properties": {
                "fault_resource": {
                    "type": "object"
                },
                "fault_type": {
                    "type": "object"
                },
                "status": {
                    "type": "object"
                }
            }
        },
        "dto.InjectionItem": {
            "type": "object",
            "properties": {
                "batch": {
                    "type": "string"
                },
                "benchmark": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_config": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "engine_config": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "fault_type": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "injection_name": {
                    "type": "string"
                },
                "pre_duration": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "dto.InjectionStatistics": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer",
                    "example": 480
                },
                "failed": {
                    "type": "integer",
                    "example": 5
                },
                "running": {
                    "type": "integer",
                    "example": 5
                },
                "scheduled": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "dto.InjectionStats": {
            "type": "object",
            "properties": {
                "diversity": {
                    "$ref": "#/definitions/dto.InjectionDiversity"
                }
            }
        },
        "dto.InjectionStatsResp": {
            "type": "object",
            "properties": {
                "no_issues_injections": {
                    "type": "integer"
                },
                "no_issues_records": {
                    "type": "integer"
                },
                "with_issues_injections": {
                    "type": "integer"
                },
                "with_issues_records": {
                    "type": "integer"
                }
            }
        },
        "dto.LabelItem": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string",
                    "enum": [
                        "env",
                        "batch",
                        "tag"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.ListInjectionsResp": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.InjectionItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.LogoutRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.MetricValue": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "unit": {
                    "type": "string",
                    "example": "percent"
                },
                "value": {
                    "type": "number",
                    "example": 42.5
                }
            }
        },
        "dto.MonitoringMetricsResponse": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.MetricValue"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                }
            }
        },
        "dto.MonitoringQueryRequest": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "end_time": {
                    "type": "string",
                    "example": "2024-01-01T23:59:59Z"
                },
                "query": {
                    "type": "string",
                    "example": "cpu_usage"
                },
                "start_time": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "step": {
                    "type": "string",
                    "example": "1m"
                }
            }
        },
        "dto.NsResourcesResp": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/handler.Resources"
            }
        },
        "dto.NumberRange": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "dto.PaginationInfo": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "example": 20
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.PaginationResp-dto_UnifiedTask": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UnifiedTask"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.PairStats": {
            "type": "object",
            "properties": {
                "inDegree": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "outDegree": {
                    "type": "integer"
                }
            }
        },
        "dto.PermissionListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PermissionResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.PermissionResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "read"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Permission to read dataset information"
                },
                "display_name": {
                    "type": "string",
                    "example": "Read Datasets"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_system": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "read_datasets"
                },
                "resource": {
                    "$ref": "#/definitions/dto.ResourceResponse"
                },
                "resource_id": {
                    "type": "integer",
                    "example": 1
                },
                "roles": {
                    "description": "Roles that have this permission",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoleResponse"
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "dto.PermissionSearchRequest": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "操作筛选",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "description_pattern": {
                    "description": "描述模糊匹配",
                    "type": "string"
                },
                "display_name_pattern": {
                    "description": "显示名模糊匹配",
                    "type": "string"
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_system": {
                    "description": "是否系统权限",
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "name_pattern": {
                    "description": "Permission-specific filter shortcuts",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "resource_ids": {
                    "description": "资源ID筛选",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "resource_names": {
                    "description": "资源名称筛选",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_ids": {
                    "description": "拥有此权限的角色ID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ProjectResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "members": {
                    "description": "Related entities (only included when specifically requested)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserProjectResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectStatistics": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer",
                    "example": 45
                },
                "inactive": {
                    "type": "integer",
                    "example": 5
                },
                "new_today": {
                    "type": "integer",
                    "example": 2
                },
                "total": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "dto.QueryInjectionResp": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "description": "基准数据库，添加索引",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间，添加时间索引",
                    "type": "string"
                },
                "description": {
                    "description": "描述（可选字段）",
                    "type": "string"
                },
                "display_config": {
                    "description": "面向用户的展示配置",
                    "type": "string"
                },
                "end_time": {
                    "description": "预计故障结束时间，添加时间索引",
                    "type": "string"
                },
                "engine_config": {
                    "description": "面向系统的运行配置",
                    "type": "string"
                },
                "fault_type": {
                    "description": "故障类型，添加复合索引",
                    "type": "integer"
                },
                "ground_truth": {
                    "$ref": "#/definitions/handler.Groundtruth"
                },
                "id": {
                    "description": "唯一标识",
                    "type": "integer"
                },
                "injection_name": {
                    "description": "在k8s资源里注入的名字",
                    "type": "string"
                },
                "pre_duration": {
                    "description": "正常数据时间",
                    "type": "integer"
                },
                "start_time": {
                    "description": "预计故障开始时间，添加时间索引",
                    "type": "string"
                },
                "status": {
                    "description": "状态，添加复合索引",
                    "type": "integer"
                },
                "task": {
                    "description": "外键关联",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Task"
                        }
                    ]
                },
                "task_id": {
                    "description": "从属什么 taskid，添加复合索引",
                    "type": "string"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "dto.RawDataItem": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "dataset": {
                    "type": "string"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GranularityRecord"
                    }
                },
                "execution_id": {
                    "type": "integer"
                },
                "groundtruth": {
                    "$ref": "#/definitions/handler.Groundtruth"
                }
            }
        },
        "dto.RawDataReq": {
            "type": "object",
            "properties": {
                "custom_end_time": {
                    "type": "string"
                },
                "custom_start_time": {
                    "type": "string"
                },
                "execution_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lookback": {
                    "type": "string"
                },
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AlgorithmDatasetPair"
                    }
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "username": {
                    "type": "string",
                    "example": "newuser"
                }
            }
        },
        "dto.RelationEntity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "type": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "dto.RelationListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RelationResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.RelationOperation": {
            "type": "object",
            "required": [
                "action",
                "source_id",
                "target_id",
                "type"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "assign",
                        "remove"
                    ],
                    "example": "assign"
                },
                "source_id": {
                    "type": "integer",
                    "example": 1
                },
                "target_id": {
                    "type": "integer",
                    "example": 2
                },
                "type": {
                    "type": "string",
                    "example": "user_role"
                }
            }
        },
        "dto.RelationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "source": {
                    "$ref": "#/definitions/dto.RelationEntity"
                },
                "target": {
                    "$ref": "#/definitions/dto.RelationEntity"
                },
                "type": {
                    "type": "string",
                    "example": "user_role"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "dto.RelationStatisticsResponse": {
            "type": "object",
            "properties": {
                "container_labels": {
                    "type": "integer",
                    "example": 150
                },
                "dataset_labels": {
                    "type": "integer",
                    "example": 200
                },
                "fault_injection_labels": {
                    "type": "integer",
                    "example": 120
                },
                "project_labels": {
                    "type": "integer",
                    "example": 80
                },
                "role_permissions": {
                    "type": "integer",
                    "example": 100
                },
                "user_permissions": {
                    "type": "integer",
                    "example": 25
                },
                "user_projects": {
                    "type": "integer",
                    "example": 75
                },
                "user_roles": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "dto.RemovePermissionFromRoleRequest": {
            "type": "object"
        },
        "dto.RemoveRolePermissionRequest": {
            "type": "object"
        },
        "dto.RemoveUserPermissionRequest": {
            "type": "object",
            "required": [
                "permission_id",
                "user_id"
            ],
            "properties": {
                "permission_id": {
                    "type": "integer",
                    "example": 1
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.RemoveUserRoleRequest": {
            "type": "object",
            "required": [
                "role_id",
                "user_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer",
                    "example": 2
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ResourceResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "data"
                },
                "display_name": {
                    "type": "string",
                    "example": "Datasets"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "datasets"
                },
                "type": {
                    "type": "string",
                    "example": "table"
                }
            }
        },
        "dto.RetryPolicy": {
            "type": "object",
            "properties": {
                "backoff_sec": {
                    "description": "Seconds to wait between retries",
                    "type": "integer"
                },
                "max_attempts": {
                    "description": "Maximum number of retry attempts",
                    "type": "integer"
                }
            }
        },
        "dto.RoleListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoleResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.RoleResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Role for data analysis operations"
                },
                "display_name": {
                    "type": "string",
                    "example": "Data Analyst"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_system": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "data_analyst"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PermissionResponse"
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "type": "string",
                    "example": "custom"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "user_count": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.RoleSearchRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "description_pattern": {
                    "description": "描述模糊匹配",
                    "type": "string"
                },
                "display_name_pattern": {
                    "description": "显示名模糊匹配",
                    "type": "string"
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_system": {
                    "description": "是否系统角色",
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "name_pattern": {
                    "description": "Role-specific filter shortcuts",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "permission_ids": {
                    "description": "权限ID筛选",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "project_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "types": {
                    "description": "角色类型筛选",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_count": {
                    "description": "用户数量范围",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.NumberRange"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchFilter": {
            "type": "object",
            "required": [
                "field",
                "operator"
            ],
            "properties": {
                "field": {
                    "description": "字段名",
                    "type": "string"
                },
                "operator": {
                    "description": "操作符",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.FilterOperator"
                        }
                    ]
                },
                "value": {
                    "description": "值"
                },
                "values": {
                    "description": "多值（用于IN操作等）",
                    "type": "array",
                    "items": {}
                }
            }
        },
        "dto.SearchResponse-dto_AlgorithmResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AlgorithmResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_ContainerResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ContainerResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_DatasetV2Response": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DatasetV2Response"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_PermissionResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PermissionResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_RoleResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoleResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_TaskResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TaskResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.SearchResponse-dto_UserResponse": {
            "type": "object",
            "properties": {
                "applied_filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "applied_sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.ServiceCoverageItem": {
            "type": "object",
            "properties": {
                "coverage": {
                    "type": "number"
                },
                "notCovered": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "num": {
                    "type": "integer"
                }
            }
        },
        "dto.ServiceInfo": {
            "type": "object",
            "properties": {
                "details": {},
                "error": {
                    "type": "string"
                },
                "last_checked": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "response_time": {
                    "type": "string",
                    "example": "15ms"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                }
            }
        },
        "dto.SizeRangeFilter": {
            "type": "object",
            "properties": {
                "max_size": {
                    "description": "最大大小（字节）",
                    "type": "integer"
                },
                "min_size": {
                    "description": "最小大小（字节）",
                    "type": "integer"
                }
            }
        },
        "dto.SortDirection": {
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ],
            "x-enum-varnames": [
                "SortASC",
                "SortDESC"
            ]
        },
        "dto.SortOption": {
            "type": "object",
            "required": [
                "direction",
                "field"
            ],
            "properties": {
                "direction": {
                    "description": "排序方向",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.SortDirection"
                        }
                    ]
                },
                "field": {
                    "description": "排序字段",
                    "type": "string"
                }
            }
        },
        "dto.SubmitInjectionReq": {
            "type": "object",
            "required": [
                "benchmark",
                "interval",
                "pre_duration",
                "project_name",
                "specs"
            ],
            "properties": {
                "algorithms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AlgorithmItem"
                    }
                },
                "benchmark": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer",
                    "minimum": 1
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.LabelItem"
                    }
                },
                "pre_duration": {
                    "type": "integer",
                    "minimum": 1
                },
                "project_name": {
                    "type": "string"
                },
                "specs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.Node"
                    }
                }
            }
        },
        "dto.SubmitInjectionResp": {
            "type": "object",
            "properties": {
                "duplicated_count": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "string"
                },
                "original_count": {
                    "type": "integer"
                },
                "traces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Trace"
                    }
                }
            }
        },
        "dto.SubmitResp": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string"
                },
                "traces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Trace"
                    }
                }
            }
        },
        "dto.SuccessfulExecutionItem": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "算法名称",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "dataset": {
                    "description": "数据集名称",
                    "type": "string"
                },
                "id": {
                    "description": "执行ID",
                    "type": "integer"
                }
            }
        },
        "dto.SystemInfo": {
            "type": "object",
            "properties": {
                "cpu_usage": {
                    "type": "number",
                    "example": 25.5
                },
                "disk_usage": {
                    "type": "number",
                    "example": 45.8
                },
                "load_average": {
                    "type": "string",
                    "example": "1.2, 1.5, 1.8"
                },
                "memory_usage": {
                    "type": "number",
                    "example": 60.2
                }
            }
        },
        "dto.SystemStatisticsResponse": {
            "type": "object",
            "properties": {
                "containers": {
                    "$ref": "#/definitions/dto.ContainerStatistics"
                },
                "datasets": {
                    "$ref": "#/definitions/dto.DatasetStatistics"
                },
                "executions": {
                    "$ref": "#/definitions/dto.ExecutionStatistics"
                },
                "generated_at": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "injections": {
                    "$ref": "#/definitions/dto.InjectionStatistics"
                },
                "projects": {
                    "$ref": "#/definitions/dto.ProjectStatistics"
                },
                "tasks": {
                    "$ref": "#/definitions/dto.TaskStatistics"
                },
                "users": {
                    "$ref": "#/definitions/dto.UserStatistics"
                }
            }
        },
        "dto.TaskDetailResp": {
            "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task": {
                    "$ref": "#/definitions/dto.TaskItem"
                }
            }
        },
        "dto.TaskDetailResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "immediate": {
                    "type": "boolean"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "project": {
                    "description": "Related entities (only included when specifically requested)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    ]
                },
                "project_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "trace_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.TaskItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "trace_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.TaskResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "immediate": {
                    "type": "boolean"
                },
                "logs": {
                    "description": "Only included when specifically requested",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "project": {
                    "description": "Related entities (only included when specifically requested)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    ]
                },
                "project_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "trace_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.TaskSearchRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "group_id": {
                    "type": "string"
                },
                "immediate": {
                    "type": "boolean"
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "string"
                },
                "task_id": {
                    "description": "Task-specific filters",
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                },
                "trace_id": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TaskStatistics": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer",
                    "example": 900
                },
                "failed": {
                    "type": "integer",
                    "example": 30
                },
                "pending": {
                    "type": "integer",
                    "example": 50
                },
                "running": {
                    "type": "integer",
                    "example": 20
                },
                "total": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "dto.TokenRefreshRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.TokenRefreshResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.Trace": {
            "type": "object",
            "properties": {
                "head_task_id": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "trace_id": {
                    "type": "string"
                }
            }
        },
        "dto.TraceStats": {
            "type": "object",
            "properties": {
                "avg_duration": {
                    "type": "number"
                },
                "end_count_map": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    }
                },
                "fault_injection_traces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_duration": {
                    "type": "number"
                },
                "min_duration": {
                    "type": "number"
                },
                "total": {
                    "type": "integer"
                },
                "trace_completed_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trace_errors": {},
                "trace_status_time_map": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "dto.UnifiedTask": {
            "type": "object",
            "properties": {
                "cron_expr": {
                    "description": "Cron expression for recurring tasks",
                    "type": "string"
                },
                "execute_time": {
                    "description": "Unix timestamp for delayed execution",
                    "type": "integer"
                },
                "group_carrier": {
                    "description": "Carrier for group context",
                    "allOf": [
                        {
                            "$ref": "#/definitions/propagation.MapCarrier"
                        }
                    ]
                },
                "group_id": {
                    "description": "ID for grouping tasks",
                    "type": "string"
                },
                "immediate": {
                    "description": "Whether to execute immediately",
                    "type": "boolean"
                },
                "payload": {
                    "description": "Task-specific data",
                    "type": "object"
                },
                "project_id": {
                    "type": "integer"
                },
                "restart_num": {
                    "description": "Number of restarts for the task",
                    "type": "integer"
                },
                "retry_policy": {
                    "description": "Policy for retrying failed tasks",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.RetryPolicy"
                        }
                    ]
                },
                "status": {
                    "description": "Status of the task",
                    "type": "string"
                },
                "task_id": {
                    "description": "Unique identifier for the task",
                    "type": "string"
                },
                "trace_carrier": {
                    "description": "Carrier for trace context",
                    "allOf": [
                        {
                            "$ref": "#/definitions/propagation.MapCarrier"
                        }
                    ]
                },
                "trace_id": {
                    "description": "ID for tracing related tasks",
                    "type": "string"
                },
                "type": {
                    "description": "Task type (determines how it's processed)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/consts.TaskType"
                        }
                    ]
                }
            }
        },
        "dto.UpdatePermissionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "read"
                },
                "description": {
                    "type": "string",
                    "example": "Updated permission description"
                },
                "display_name": {
                    "type": "string",
                    "example": "Read All Datasets"
                },
                "resource_id": {
                    "type": "integer",
                    "example": 2
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UpdateRoleRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated role description"
                },
                "display_name": {
                    "type": "string",
                    "example": "Senior Data Analyst"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/new-avatar.jpg"
                },
                "email": {
                    "type": "string",
                    "example": "newemail@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "phone": {
                    "type": "string",
                    "example": "+0987654321"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "admin@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Administrator"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "dto.UserListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationInfo"
                }
            }
        },
        "dto.UserProjectResponse": {
            "type": "object",
            "properties": {
                "joined_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "project_id": {
                    "type": "integer",
                    "example": 1
                },
                "project_name": {
                    "type": "string",
                    "example": "Project Alpha"
                },
                "role": {
                    "$ref": "#/definitions/dto.RoleResponse"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "admin@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Administrator"
                },
                "global_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RoleResponse"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_login_at": {
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PermissionResponse"
                    }
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "project_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserProjectResponse"
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "dto.UserSearchRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Common filters shortcuts",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "departments": {
                    "description": "部门筛选",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email_pattern": {
                    "description": "邮箱模糊匹配",
                    "type": "string"
                },
                "exclude_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchFilter"
                    }
                },
                "fullname_pattern": {
                    "description": "全名模糊匹配",
                    "type": "string"
                },
                "include": {
                    "description": "Include related entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include_fields": {
                    "description": "Include/Exclude fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "keyword": {
                    "description": "Search keyword (for general text search)",
                    "type": "string"
                },
                "last_login_range": {
                    "description": "最后登录时间范围",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DateRange"
                        }
                    ]
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1
                },
                "project_id": {
                    "type": "integer"
                },
                "project_ids": {
                    "description": "项目ID筛选",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "role_ids": {
                    "description": "角色ID筛选",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "size": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                },
                "sort": {
                    "description": "Sort",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortOption"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "$ref": "#/definitions/dto.DateRange"
                },
                "user_id": {
                    "type": "integer"
                },
                "username_pattern": {
                    "description": "User-specific filter shortcuts",
                    "type": "string"
                }
            }
        },
        "dto.UserStatistics": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer",
                    "example": 120
                },
                "inactive": {
                    "type": "integer",
                    "example": 30
                },
                "new_this_week": {
                    "type": "integer",
                    "example": 20
                },
                "new_today": {
                    "type": "integer",
                    "example": 5
                },
                "total": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "handler.Groundtruth": {
            "type": "object",
            "properties": {
                "container": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "function": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metric": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pod": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "span": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.Node": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/handler.Node"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "handler.Pair": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "handler.Resources": {
            "type": "object",
            "properties": {
                "app_labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "container_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "database_app_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dns_app_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "http_app_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jvm_app_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network_pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.Pair"
                    }
                }
            }
        },
        "propagation.MapCarrier": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.1",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "RCABench API",
	Description:      "RCABench - A comprehensive root cause analysis benchmarking platform for microservices\nThis API provides endpoints for managing datasets, algorithms, evaluations, and fault injections\nfor root cause analysis in distributed systems and microservices architectures.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
