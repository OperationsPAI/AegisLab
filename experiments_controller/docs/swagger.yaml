basePath: /api/v1
definitions:
  consts.TaskType:
    enum:
    - RestartService
    - RunAlgorithm
    - FaultInjection
    - BuildImage
    - BuildDataset
    - CollectResult
    type: string
    x-enum-varnames:
    - TaskTypeRestartService
    - TaskTypeRunAlgorithm
    - TaskTypeFaultInjection
    - TaskTypeBuildImage
    - TaskTypeBuildDataset
    - TaskTypeCollectResult
  database.Container:
    properties:
      command:
        description: 启动命令
        type: string
      created_at:
        description: 创建时间
        type: string
      env_vars:
        description: 环境变量名称列表
        type: string
      id:
        description: 唯一标识
        type: integer
      image:
        description: 镜像名
        type: string
      name:
        description: 名称
        type: string
      status:
        description: '0: 已删除 1: 活跃'
        type: boolean
      tag:
        description: 镜像标签
        type: string
      type:
        description: 镜像类型
        type: string
      updated_at:
        description: 更新时间
        type: string
    type: object
  database.Task:
    properties:
      created_at:
        description: 添加时间索引
        type: string
      cron_expr:
        type: string
      execute_time:
        description: 添加执行时间索引
        type: integer
      group_id:
        description: 添加组ID索引
        type: string
      id:
        type: string
      immediate:
        type: boolean
      payload:
        type: string
      project_id:
        description: 复合索引
        type: integer
      status:
        description: 添加多个复合索引
        type: string
      trace_id:
        description: 添加追踪ID索引
        type: string
      type:
        description: 添加复合索引
        type: string
      updated_at:
        type: string
    type: object
  dto.AlgorithmDatasetPair:
    properties:
      algorithm:
        type: string
      dataset:
        type: string
    type: object
  dto.AlgorithmItem:
    properties:
      image:
        type: string
      name:
        type: string
      tag:
        type: string
    required:
    - name
    type: object
  dto.AnalyzeInjectionsResp:
    properties:
      efficiency:
        type: string
      stats:
        additionalProperties:
          $ref: '#/definitions/dto.InjectionStats'
        type: object
    type: object
  dto.AssignPermissionToRoleRequest:
    type: object
  dto.AssignRolePermissionRequest:
    type: object
  dto.AssignUserPermissionRequest:
    properties:
      expires_at:
        example: "2024-12-31T23:59:59Z"
        type: string
      grant_type:
        enum:
        - grant
        - deny
        example: grant
        type: string
      permission_id:
        example: 1
        type: integer
      project_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    required:
    - grant_type
    - permission_id
    - user_id
    type: object
  dto.AssignUserRoleRequest:
    properties:
      role_id:
        example: 2
        type: integer
      user_id:
        example: 1
        type: integer
    required:
    - role_id
    - user_id
    type: object
  dto.AssignUserToProjectRequest:
    properties:
      project_id:
        example: 1
        type: integer
      role_id:
        example: 2
        type: integer
    required:
    - project_id
    - role_id
    type: object
  dto.AttributeCoverageItem:
    properties:
      coverage:
        type: number
      num:
        type: integer
    type: object
  dto.AuditLogListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AuditLogResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.AuditLogRequest:
    properties:
      action:
        example: CREATE_USER
        type: string
      details:
        example: '{"username":"newuser"}'
        type: string
      resource:
        example: users
        type: string
      resource_id:
        example: 123
        type: integer
    required:
    - action
    - resource
    type: object
  dto.AuditLogResponse:
    properties:
      action:
        example: CREATE_USER
        type: string
      details:
        example: '{"username":"newuser"}'
        type: string
      error:
        type: string
      id:
        example: 1
        type: integer
      ip_address:
        example: 192.168.1.100
        type: string
      resource:
        example: users
        type: string
      resource_id:
        example: "123"
        type: string
      success:
        example: true
        type: boolean
      timestamp:
        example: "2024-01-01T12:00:00Z"
        type: string
      user_agent:
        example: Mozilla/5.0...
        type: string
      user_id:
        example: 1
        type: integer
      username:
        example: admin
        type: string
    type: object
  dto.BatchRelationRequest:
    properties:
      operations:
        items:
          $ref: '#/definitions/dto.RelationOperation'
        minItems: 1
        type: array
    required:
    - operations
    type: object
  dto.ChangePasswordRequest:
    properties:
      new_password:
        example: newpassword123
        minLength: 8
        type: string
      old_password:
        example: oldpassword123
        type: string
    required:
    - new_password
    - old_password
    type: object
  dto.ContainerStatistics:
    properties:
      active:
        example: 20
        type: integer
      deleted:
        example: 5
        type: integer
      total:
        example: 25
        type: integer
    type: object
  dto.CreatePermissionRequest:
    properties:
      action:
        example: read
        type: string
      description:
        example: Permission to read dataset information
        type: string
      display_name:
        example: Read Datasets
        type: string
      name:
        example: read_datasets
        type: string
      resource_id:
        example: 1
        type: integer
    required:
    - action
    - display_name
    - name
    - resource_id
    type: object
  dto.CreateRoleRequest:
    properties:
      description:
        example: Role for data analysis operations
        type: string
      display_name:
        example: Data Analyst
        type: string
      name:
        example: data_analyst
        type: string
      type:
        enum:
        - system
        - custom
        example: custom
        type: string
    required:
    - display_name
    - name
    - type
    type: object
  dto.CreateUserRequest:
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      email:
        example: user@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
      phone:
        example: "+1234567890"
        type: string
      username:
        example: newuser
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  dto.DatasetBuildPayload:
    properties:
      benchmark:
        type: string
      env_vars:
        type: object
      name:
        type: string
      pre_duration:
        type: integer
    required:
    - name
    type: object
  dto.DatasetDeleteResp:
    properties:
      failed_names:
        items:
          type: string
        type: array
      success_count:
        type: integer
    type: object
  dto.DatasetStatistics:
    properties:
      private:
        example: 70
        type: integer
      public:
        example: 30
        type: integer
      total:
        example: 100
        type: integer
      total_size:
        example: 1073741824
        type: integer
    type: object
  dto.DateRange:
    properties:
      from:
        type: string
      to:
        type: string
    type: object
  dto.ExecutionPayload:
    properties:
      algorithm:
        $ref: '#/definitions/dto.AlgorithmItem'
      dataset:
        type: string
      env_vars:
        type: object
    required:
    - algorithm
    - dataset
    type: object
  dto.ExecutionStatistics:
    properties:
      failed:
        example: 50
        type: integer
      successful:
        example: 750
        type: integer
      total:
        example: 800
        type: integer
    type: object
  dto.FaultInjectionNoIssuesResp:
    properties:
      dataset_id:
        type: integer
      engine_config:
        $ref: '#/definitions/handler.Node'
      injection_name:
        type: string
    type: object
  dto.FaultInjectionWithIssuesResp:
    properties:
      abnormal_avg_duration:
        type: number
      abnormal_p99:
        type: number
      abnormal_succ_rate:
        type: number
      dataset_id:
        type: integer
      engine_config:
        $ref: '#/definitions/handler.Node'
      injection_name:
        type: string
      issues:
        type: string
      normal_avg_duration:
        type: number
      normal_p99:
        type: number
      normal_succ_rate:
        type: number
    type: object
  dto.FilterOperator:
    enum:
    - eq
    - ne
    - gt
    - gte
    - lt
    - lte
    - like
    - starts
    - ends
    - nlike
    - in
    - nin
    - "null"
    - nnull
    - deq
    - dafter
    - dbefore
    - dbetween
    type: string
    x-enum-comments:
      OpDateAfter: DATE(field) > DATE(value)
      OpDateBefore: DATE(field) < DATE(value)
      OpDateBetween: DATE(field) BETWEEN date1 AND date2
      OpDateEqual: DATE(field) = DATE(value)
      OpEndsWith: LIKE %value
      OpEqual: ==
      OpGreater: '>'
      OpGreaterEq: '>='
      OpIn: IN (value1, value2, ...)
      OpIsNotNull: IS NOT NULL
      OpIsNull: IS NULL
      OpLess: <
      OpLessEq: <=
      OpLike: LIKE %value%
      OpNotEqual: '!='
      OpNotIn: NOT IN (value1, value2, ...)
      OpNotLike: NOT LIKE %value%
      OpStartsWith: LIKE value%
    x-enum-varnames:
    - OpEqual
    - OpNotEqual
    - OpGreater
    - OpGreaterEq
    - OpLess
    - OpLessEq
    - OpLike
    - OpStartsWith
    - OpEndsWith
    - OpNotLike
    - OpIn
    - OpNotIn
    - OpIsNull
    - OpIsNotNull
    - OpDateEqual
    - OpDateAfter
    - OpDateBefore
    - OpDateBetween
  dto.GenericResponse-any:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-array_dto_FaultInjectionNoIssuesResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.FaultInjectionNoIssuesResp'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-array_dto_FaultInjectionWithIssuesResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.FaultInjectionWithIssuesResp'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-array_dto_PermissionResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.PermissionResponse'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-array_dto_RoleResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.RoleResponse'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-array_dto_UserResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_AnalyzeInjectionsResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.AnalyzeInjectionsResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_AuditLogListResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.AuditLogListResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_AuditLogResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.AuditLogResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_DatasetDeleteResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.DatasetDeleteResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_GetCompletedMapResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.GetCompletedMapResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_GroundTruthResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.GroundTruthResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_HealthCheckResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.HealthCheckResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_InjectCancelResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.InjectCancelResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_InjectionFieldMappingResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.InjectionFieldMappingResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_InjectionStatsResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.InjectionStatsResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_ListAlgorithmsResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/database.Container'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_ListInjectionsResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.ListInjectionsResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_ListTasksResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/database.Task'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_LoginResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.LoginResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_MonitoringMetricsResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.MonitoringMetricsResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_NsResourcesResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.NsResourcesResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_PaginationResp-dto_UnifiedTask:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.PaginationResp-dto_UnifiedTask'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_PermissionListResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.PermissionListResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_PermissionResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.PermissionResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_QueryInjectionResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.QueryInjectionResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_RawDataResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.RawDataItem'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_RelationListResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.RelationListResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_RelationStatisticsResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.RelationStatisticsResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_RoleListResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.RoleListResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_RoleResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.RoleResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SearchResponse-dto_PermissionResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SearchResponse-dto_PermissionResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SearchResponse-dto_RoleResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SearchResponse-dto_RoleResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SearchResponse-dto_UserResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SearchResponse-dto_UserResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SubmitInjectionResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SubmitInjectionResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SubmitResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SubmitResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SuccessfulExecutionsResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 泛型类型的数据
        items:
          $ref: '#/definitions/dto.SuccessfulExecutionItem'
        type: array
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SystemInfo:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SystemInfo'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_SystemStatisticsResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.SystemStatisticsResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_TaskDetailResp:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.TaskDetailResp'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_TokenRefreshResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.TokenRefreshResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_TraceStats:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.TraceStats'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_UserInfo:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.UserInfo'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_UserListResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.UserListResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-dto_UserResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.UserResponse'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-handler_Node:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/handler.Node'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GenericResponse-handler_Resources:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/handler.Resources'
        description: 泛型类型的数据
      message:
        description: 响应消息
        type: string
      timestamp:
        description: 响应生成时间
        type: integer
    type: object
  dto.GetCompletedMapResp:
    properties:
      has_anomaly:
        description: 检测到异常的链路ID列表
        items:
          type: string
        type: array
      no_anomaly:
        description: 没有异常的链路ID列表
        items:
          type: string
        type: array
    type: object
  dto.GranularityRecord:
    properties:
      confidence:
        type: number
      level:
        type: string
      rank:
        type: integer
      result:
        type: string
    type: object
  dto.GroundTruthReq:
    properties:
      datasets:
        items:
          type: string
        type: array
    required:
    - datasets
    type: object
  dto.GroundTruthResp:
    additionalProperties:
      $ref: '#/definitions/handler.Groundtruth'
    type: object
  dto.HealthCheckResponse:
    properties:
      services:
        additionalProperties:
          $ref: '#/definitions/dto.ServiceInfo'
        type: object
      status:
        example: healthy
        type: string
      timestamp:
        example: "2024-01-01T12:00:00Z"
        type: string
      uptime:
        example: 72h30m15s
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  dto.InjectCancelResp:
    type: object
  dto.InjectionDiversity:
    properties:
      attribute_coverages:
        additionalProperties:
          additionalProperties:
            $ref: '#/definitions/dto.AttributeCoverageItem'
          type: object
        type: object
      fault_distribution:
        additionalProperties:
          type: integer
        type: object
      fault_service_coverages:
        additionalProperties:
          $ref: '#/definitions/dto.ServiceCoverageItem'
        type: object
      pair_distribution:
        items:
          $ref: '#/definitions/dto.PairStats'
        type: array
      service_distribution:
        additionalProperties:
          type: integer
        type: object
    type: object
  dto.InjectionFieldMappingResp:
    properties:
      fault_resource:
        type: object
      fault_type:
        type: object
      status:
        type: object
    type: object
  dto.InjectionItem:
    properties:
      batch:
        type: string
      benchmark:
        type: string
      created_at:
        type: string
      display_config:
        type: string
      end_time:
        type: string
      engine_config:
        type: string
      env:
        type: string
      fault_type:
        type: integer
      id:
        type: integer
      injection_name:
        type: string
      pre_duration:
        type: integer
      start_time:
        type: string
      status:
        type: integer
      tag:
        type: string
    type: object
  dto.InjectionStatistics:
    properties:
      completed:
        example: 480
        type: integer
      failed:
        example: 5
        type: integer
      running:
        example: 5
        type: integer
      scheduled:
        example: 10
        type: integer
      total:
        example: 500
        type: integer
    type: object
  dto.InjectionStats:
    properties:
      diversity:
        $ref: '#/definitions/dto.InjectionDiversity'
    type: object
  dto.InjectionStatsResp:
    properties:
      no_issues_injections:
        type: integer
      no_issues_records:
        type: integer
      with_issues_injections:
        type: integer
      with_issues_records:
        type: integer
    type: object
  dto.LabelItem:
    properties:
      key:
        enum:
        - env
        - batch
        - tag
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  dto.ListInjectionsResp:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.InjectionItem'
        type: array
      total:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      expires_at:
        example: "2024-12-31T23:59:59Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/dto.UserInfo'
    type: object
  dto.LogoutRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
  dto.MetricValue:
    properties:
      timestamp:
        example: "2024-01-01T12:00:00Z"
        type: string
      unit:
        example: percent
        type: string
      value:
        example: 42.5
        type: number
    type: object
  dto.MonitoringMetricsResponse:
    properties:
      labels:
        additionalProperties:
          type: string
        type: object
      metrics:
        additionalProperties:
          $ref: '#/definitions/dto.MetricValue'
        type: object
      timestamp:
        example: "2024-01-01T12:00:00Z"
        type: string
    type: object
  dto.MonitoringQueryRequest:
    properties:
      end_time:
        example: "2024-01-01T23:59:59Z"
        type: string
      query:
        example: cpu_usage
        type: string
      start_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      step:
        example: 1m
        type: string
    required:
    - query
    type: object
  dto.NsResourcesResp:
    additionalProperties:
      $ref: '#/definitions/handler.Resources'
    type: object
  dto.NumberRange:
    properties:
      max:
        type: number
      min:
        type: number
    type: object
  dto.PaginationInfo:
    properties:
      page:
        example: 1
        type: integer
      size:
        example: 20
        type: integer
      total:
        example: 100
        type: integer
      total_pages:
        example: 5
        type: integer
    type: object
  dto.PaginationResp-dto_UnifiedTask:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.UnifiedTask'
        type: array
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.PairStats:
    properties:
      inDegree:
        type: integer
      name:
        type: string
      outDegree:
        type: integer
    type: object
  dto.PermissionListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.PermissionResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.PermissionResponse:
    properties:
      action:
        example: read
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      description:
        example: Permission to read dataset information
        type: string
      display_name:
        example: Read Datasets
        type: string
      id:
        example: 1
        type: integer
      is_system:
        example: false
        type: boolean
      name:
        example: read_datasets
        type: string
      resource:
        $ref: '#/definitions/dto.ResourceResponse'
      resource_id:
        example: 1
        type: integer
      roles:
        description: Roles that have this permission
        items:
          $ref: '#/definitions/dto.RoleResponse'
        type: array
      status:
        example: 1
        type: integer
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
    type: object
  dto.PermissionSearchRequest:
    properties:
      actions:
        description: 操作筛选
        items:
          type: string
        type: array
      created_at:
        allOf:
        - $ref: '#/definitions/dto.DateRange'
        description: Common filters shortcuts
      description_pattern:
        description: 描述模糊匹配
        type: string
      display_name_pattern:
        description: 显示名模糊匹配
        type: string
      exclude_fields:
        items:
          type: string
        type: array
      filters:
        description: Filters
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      include:
        description: Include related entities
        items:
          type: string
        type: array
      include_fields:
        description: Include/Exclude fields
        items:
          type: string
        type: array
      is_active:
        type: boolean
      is_system:
        description: 是否系统权限
        type: boolean
      keyword:
        description: Search keyword (for general text search)
        type: string
      name_pattern:
        description: Permission-specific filter shortcuts
        type: string
      page:
        description: Pagination
        minimum: 1
        type: integer
      project_id:
        type: integer
      resource_ids:
        description: 资源ID筛选
        items:
          type: integer
        type: array
      resource_names:
        description: 资源名称筛选
        items:
          type: string
        type: array
      role_ids:
        description: 拥有此权限的角色ID
        items:
          type: integer
        type: array
      size:
        maximum: 1000
        minimum: 1
        type: integer
      sort:
        description: Sort
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      status:
        items:
          type: integer
        type: array
      updated_at:
        $ref: '#/definitions/dto.DateRange'
      user_id:
        type: integer
    type: object
  dto.ProjectStatistics:
    properties:
      active:
        example: 45
        type: integer
      inactive:
        example: 5
        type: integer
      new_today:
        example: 2
        type: integer
      total:
        example: 50
        type: integer
    type: object
  dto.QueryInjectionResp:
    properties:
      benchmark:
        description: 基准数据库，添加索引
        type: string
      created_at:
        description: 创建时间，添加时间索引
        type: string
      description:
        description: 描述（可选字段）
        type: string
      display_config:
        description: 面向用户的展示配置
        type: string
      end_time:
        description: 预计故障结束时间，添加时间索引
        type: string
      engine_config:
        description: 面向系统的运行配置
        type: string
      fault_type:
        description: 故障类型，添加复合索引
        type: integer
      ground_truth:
        $ref: '#/definitions/handler.Groundtruth'
      id:
        description: 唯一标识
        type: integer
      injection_name:
        description: 在k8s资源里注入的名字
        type: string
      pre_duration:
        description: 正常数据时间
        type: integer
      start_time:
        description: 预计故障开始时间，添加时间索引
        type: string
      status:
        description: 状态，添加复合索引
        type: integer
      task:
        allOf:
        - $ref: '#/definitions/database.Task'
        description: 外键关联
      task_id:
        description: 从属什么 taskid，添加复合索引
        type: string
      updated_at:
        description: 更新时间
        type: string
    type: object
  dto.RawDataItem:
    properties:
      algorithm:
        type: string
      dataset:
        type: string
      entries:
        items:
          $ref: '#/definitions/dto.GranularityRecord'
        type: array
      execution_id:
        type: integer
      groundtruth:
        $ref: '#/definitions/handler.Groundtruth'
    type: object
  dto.RawDataReq:
    properties:
      custom_end_time:
        type: string
      custom_start_time:
        type: string
      execution_ids:
        items:
          type: integer
        type: array
      lookback:
        type: string
      pairs:
        items:
          $ref: '#/definitions/dto.AlgorithmDatasetPair'
        type: array
    type: object
  dto.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      password:
        example: password123
        minLength: 8
        type: string
      phone:
        example: "+1234567890"
        type: string
      username:
        example: newuser
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  dto.RelationEntity:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: admin
        type: string
      type:
        example: user
        type: string
    type: object
  dto.RelationListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.RelationResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.RelationOperation:
    properties:
      action:
        enum:
        - assign
        - remove
        example: assign
        type: string
      source_id:
        example: 1
        type: integer
      target_id:
        example: 2
        type: integer
      type:
        example: user_role
        type: string
    required:
    - action
    - source_id
    - target_id
    - type
    type: object
  dto.RelationResponse:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      source:
        $ref: '#/definitions/dto.RelationEntity'
      target:
        $ref: '#/definitions/dto.RelationEntity'
      type:
        example: user_role
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
    type: object
  dto.RelationStatisticsResponse:
    properties:
      container_labels:
        example: 150
        type: integer
      dataset_labels:
        example: 200
        type: integer
      fault_injection_labels:
        example: 120
        type: integer
      project_labels:
        example: 80
        type: integer
      role_permissions:
        example: 100
        type: integer
      user_permissions:
        example: 25
        type: integer
      user_projects:
        example: 75
        type: integer
      user_roles:
        example: 50
        type: integer
    type: object
  dto.RemovePermissionFromRoleRequest:
    type: object
  dto.RemoveRolePermissionRequest:
    type: object
  dto.RemoveUserPermissionRequest:
    properties:
      permission_id:
        example: 1
        type: integer
      project_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    required:
    - permission_id
    - user_id
    type: object
  dto.RemoveUserRoleRequest:
    properties:
      role_id:
        example: 2
        type: integer
      user_id:
        example: 1
        type: integer
    required:
    - role_id
    - user_id
    type: object
  dto.ResourceResponse:
    properties:
      category:
        example: data
        type: string
      display_name:
        example: Datasets
        type: string
      id:
        example: 1
        type: integer
      name:
        example: datasets
        type: string
      type:
        example: table
        type: string
    type: object
  dto.RetryPolicy:
    properties:
      backoff_sec:
        description: Seconds to wait between retries
        type: integer
      max_attempts:
        description: Maximum number of retry attempts
        type: integer
    type: object
  dto.RoleListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.RoleResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.RoleResponse:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      description:
        example: Role for data analysis operations
        type: string
      display_name:
        example: Data Analyst
        type: string
      id:
        example: 1
        type: integer
      is_system:
        example: false
        type: boolean
      name:
        example: data_analyst
        type: string
      permissions:
        items:
          $ref: '#/definitions/dto.PermissionResponse'
        type: array
      status:
        example: 1
        type: integer
      type:
        example: custom
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      user_count:
        example: 5
        type: integer
    type: object
  dto.RoleSearchRequest:
    properties:
      created_at:
        allOf:
        - $ref: '#/definitions/dto.DateRange'
        description: Common filters shortcuts
      description_pattern:
        description: 描述模糊匹配
        type: string
      display_name_pattern:
        description: 显示名模糊匹配
        type: string
      exclude_fields:
        items:
          type: string
        type: array
      filters:
        description: Filters
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      include:
        description: Include related entities
        items:
          type: string
        type: array
      include_fields:
        description: Include/Exclude fields
        items:
          type: string
        type: array
      is_active:
        type: boolean
      is_system:
        description: 是否系统角色
        type: boolean
      keyword:
        description: Search keyword (for general text search)
        type: string
      name_pattern:
        description: Role-specific filter shortcuts
        type: string
      page:
        description: Pagination
        minimum: 1
        type: integer
      permission_ids:
        description: 权限ID筛选
        items:
          type: integer
        type: array
      project_id:
        type: integer
      size:
        maximum: 1000
        minimum: 1
        type: integer
      sort:
        description: Sort
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      status:
        items:
          type: integer
        type: array
      types:
        description: 角色类型筛选
        items:
          type: string
        type: array
      updated_at:
        $ref: '#/definitions/dto.DateRange'
      user_count:
        allOf:
        - $ref: '#/definitions/dto.NumberRange'
        description: 用户数量范围
      user_id:
        type: integer
    type: object
  dto.SearchFilter:
    properties:
      field:
        description: 字段名
        type: string
      operator:
        allOf:
        - $ref: '#/definitions/dto.FilterOperator'
        description: 操作符
      value:
        description: 值
      values:
        description: 多值（用于IN操作等）
        items: {}
        type: array
    required:
    - field
    - operator
    type: object
  dto.SearchResponse-dto_PermissionResponse:
    properties:
      applied_filters:
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      applied_sort:
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      items:
        items:
          $ref: '#/definitions/dto.PermissionResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.SearchResponse-dto_RoleResponse:
    properties:
      applied_filters:
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      applied_sort:
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      items:
        items:
          $ref: '#/definitions/dto.RoleResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.SearchResponse-dto_UserResponse:
    properties:
      applied_filters:
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      applied_sort:
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      items:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.ServiceCoverageItem:
    properties:
      coverage:
        type: number
      notCovered:
        items:
          type: string
        type: array
      num:
        type: integer
    type: object
  dto.ServiceInfo:
    properties:
      details: {}
      error:
        type: string
      last_checked:
        example: "2024-01-01T12:00:00Z"
        type: string
      response_time:
        example: 15ms
        type: string
      status:
        example: healthy
        type: string
    type: object
  dto.SortDirection:
    enum:
    - asc
    - desc
    type: string
    x-enum-varnames:
    - SortASC
    - SortDESC
  dto.SortOption:
    properties:
      direction:
        allOf:
        - $ref: '#/definitions/dto.SortDirection'
        description: 排序方向
      field:
        description: 排序字段
        type: string
    required:
    - direction
    - field
    type: object
  dto.SubmitInjectionReq:
    properties:
      algorithms:
        items:
          $ref: '#/definitions/dto.AlgorithmItem'
        type: array
      benchmark:
        type: string
      interval:
        minimum: 1
        type: integer
      labels:
        items:
          $ref: '#/definitions/dto.LabelItem'
        type: array
      pre_duration:
        minimum: 1
        type: integer
      project_name:
        type: string
      specs:
        items:
          $ref: '#/definitions/handler.Node'
        type: array
    required:
    - benchmark
    - interval
    - pre_duration
    - project_name
    - specs
    type: object
  dto.SubmitInjectionResp:
    properties:
      duplicated_count:
        type: integer
      group_id:
        type: string
      original_count:
        type: integer
      traces:
        items:
          $ref: '#/definitions/dto.Trace'
        type: array
    type: object
  dto.SubmitResp:
    properties:
      group_id:
        type: string
      traces:
        items:
          $ref: '#/definitions/dto.Trace'
        type: array
    type: object
  dto.SuccessfulExecutionItem:
    properties:
      algorithm:
        description: 算法名称
        type: string
      created_at:
        description: 创建时间
        type: string
      dataset:
        description: 数据集名称
        type: string
      id:
        description: 执行ID
        type: integer
    type: object
  dto.SystemInfo:
    properties:
      cpu_usage:
        example: 25.5
        type: number
      disk_usage:
        example: 45.8
        type: number
      load_average:
        example: 1.2, 1.5, 1.8
        type: string
      memory_usage:
        example: 60.2
        type: number
    type: object
  dto.SystemStatisticsResponse:
    properties:
      containers:
        $ref: '#/definitions/dto.ContainerStatistics'
      datasets:
        $ref: '#/definitions/dto.DatasetStatistics'
      executions:
        $ref: '#/definitions/dto.ExecutionStatistics'
      generated_at:
        example: "2024-01-01T12:00:00Z"
        type: string
      injections:
        $ref: '#/definitions/dto.InjectionStatistics'
      projects:
        $ref: '#/definitions/dto.ProjectStatistics'
      tasks:
        $ref: '#/definitions/dto.TaskStatistics'
      users:
        $ref: '#/definitions/dto.UserStatistics'
    type: object
  dto.TaskDetailResp:
    properties:
      logs:
        items:
          type: string
        type: array
      task:
        $ref: '#/definitions/dto.TaskItem'
    type: object
  dto.TaskItem:
    properties:
      created_at:
        type: string
      id:
        type: string
      payload:
        type: object
      status:
        type: string
      trace_id:
        type: string
      type:
        type: string
    type: object
  dto.TaskStatistics:
    properties:
      completed:
        example: 900
        type: integer
      failed:
        example: 30
        type: integer
      pending:
        example: 50
        type: integer
      running:
        example: 20
        type: integer
      total:
        example: 1000
        type: integer
    type: object
  dto.TokenRefreshRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - token
    type: object
  dto.TokenRefreshResponse:
    properties:
      expires_at:
        example: "2024-12-31T23:59:59Z"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  dto.Trace:
    properties:
      head_task_id:
        type: string
      index:
        type: integer
      trace_id:
        type: string
    type: object
  dto.TraceStats:
    properties:
      avg_duration:
        type: number
      end_count_map:
        additionalProperties:
          additionalProperties:
            type: integer
          type: object
        type: object
      fault_injection_traces:
        items:
          type: string
        type: array
      max_duration:
        type: number
      min_duration:
        type: number
      total:
        type: integer
      trace_completed_list:
        items:
          type: string
        type: array
      trace_errors: {}
      trace_status_time_map:
        additionalProperties:
          additionalProperties:
            type: number
          type: object
        type: object
    type: object
  dto.UnifiedTask:
    properties:
      cron_expr:
        description: Cron expression for recurring tasks
        type: string
      execute_time:
        description: Unix timestamp for delayed execution
        type: integer
      group_carrier:
        allOf:
        - $ref: '#/definitions/propagation.MapCarrier'
        description: Carrier for group context
      group_id:
        description: ID for grouping tasks
        type: string
      immediate:
        description: Whether to execute immediately
        type: boolean
      payload:
        description: Task-specific data
        type: object
      project_id:
        type: integer
      restart_num:
        description: Number of restarts for the task
        type: integer
      retry_policy:
        allOf:
        - $ref: '#/definitions/dto.RetryPolicy'
        description: Policy for retrying failed tasks
      status:
        description: Status of the task
        type: string
      task_id:
        description: Unique identifier for the task
        type: string
      trace_carrier:
        allOf:
        - $ref: '#/definitions/propagation.MapCarrier'
        description: Carrier for trace context
      trace_id:
        description: ID for tracing related tasks
        type: string
      type:
        allOf:
        - $ref: '#/definitions/consts.TaskType'
        description: Task type (determines how it's processed)
    type: object
  dto.UpdatePermissionRequest:
    properties:
      action:
        example: read
        type: string
      description:
        example: Updated permission description
        type: string
      display_name:
        example: Read All Datasets
        type: string
      resource_id:
        example: 2
        type: integer
      status:
        example: 1
        type: integer
    type: object
  dto.UpdateRoleRequest:
    properties:
      description:
        example: Updated role description
        type: string
      display_name:
        example: Senior Data Analyst
        type: string
      status:
        example: 1
        type: integer
    type: object
  dto.UpdateUserRequest:
    properties:
      avatar:
        example: https://example.com/new-avatar.jpg
        type: string
      email:
        example: newemail@example.com
        type: string
      full_name:
        example: Jane Doe
        type: string
      is_active:
        example: true
        type: boolean
      phone:
        example: "+0987654321"
        type: string
      status:
        example: 1
        type: integer
    type: object
  dto.UserInfo:
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      email:
        example: admin@example.com
        type: string
      full_name:
        example: Administrator
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      phone:
        example: "+1234567890"
        type: string
      status:
        example: 1
        type: integer
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      username:
        example: admin
        type: string
    type: object
  dto.UserListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.UserProjectResponse:
    properties:
      joined_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      project_id:
        example: 1
        type: integer
      project_name:
        example: Project Alpha
        type: string
      role:
        $ref: '#/definitions/dto.RoleResponse'
      status:
        example: 1
        type: integer
    type: object
  dto.UserResponse:
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      email:
        example: admin@example.com
        type: string
      full_name:
        example: Administrator
        type: string
      global_roles:
        items:
          $ref: '#/definitions/dto.RoleResponse'
        type: array
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      last_login_at:
        example: "2024-01-01T12:00:00Z"
        type: string
      permissions:
        items:
          $ref: '#/definitions/dto.PermissionResponse'
        type: array
      phone:
        example: "+1234567890"
        type: string
      project_roles:
        items:
          $ref: '#/definitions/dto.UserProjectResponse'
        type: array
      status:
        example: 1
        type: integer
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      username:
        example: admin
        type: string
    type: object
  dto.UserSearchRequest:
    properties:
      created_at:
        allOf:
        - $ref: '#/definitions/dto.DateRange'
        description: Common filters shortcuts
      departments:
        description: 部门筛选
        items:
          type: string
        type: array
      email_pattern:
        description: 邮箱模糊匹配
        type: string
      exclude_fields:
        items:
          type: string
        type: array
      filters:
        description: Filters
        items:
          $ref: '#/definitions/dto.SearchFilter'
        type: array
      fullname_pattern:
        description: 全名模糊匹配
        type: string
      include:
        description: Include related entities
        items:
          type: string
        type: array
      include_fields:
        description: Include/Exclude fields
        items:
          type: string
        type: array
      is_active:
        type: boolean
      keyword:
        description: Search keyword (for general text search)
        type: string
      last_login_range:
        allOf:
        - $ref: '#/definitions/dto.DateRange'
        description: 最后登录时间范围
      page:
        description: Pagination
        minimum: 1
        type: integer
      project_id:
        type: integer
      project_ids:
        description: 项目ID筛选
        items:
          type: integer
        type: array
      role_ids:
        description: 角色ID筛选
        items:
          type: integer
        type: array
      size:
        maximum: 1000
        minimum: 1
        type: integer
      sort:
        description: Sort
        items:
          $ref: '#/definitions/dto.SortOption'
        type: array
      status:
        items:
          type: integer
        type: array
      updated_at:
        $ref: '#/definitions/dto.DateRange'
      user_id:
        type: integer
      username_pattern:
        description: User-specific filter shortcuts
        type: string
    type: object
  dto.UserStatistics:
    properties:
      active:
        example: 120
        type: integer
      inactive:
        example: 30
        type: integer
      new_this_week:
        example: 20
        type: integer
      new_today:
        example: 5
        type: integer
      total:
        example: 150
        type: integer
    type: object
  handler.Groundtruth:
    properties:
      container:
        items:
          type: string
        type: array
      function:
        items:
          type: string
        type: array
      metric:
        items:
          type: string
        type: array
      pod:
        items:
          type: string
        type: array
      service:
        items:
          type: string
        type: array
      span:
        items:
          type: string
        type: array
    type: object
  handler.Node:
    properties:
      children:
        additionalProperties:
          $ref: '#/definitions/handler.Node'
        type: object
      description:
        type: string
      name:
        type: string
      range:
        items:
          type: integer
        type: array
      value:
        type: integer
    type: object
  handler.Pair:
    properties:
      source:
        type: string
      target:
        type: string
    type: object
  handler.Resources:
    properties:
      app_labels:
        items:
          type: string
        type: array
      container_names:
        items:
          type: string
        type: array
      database_app_names:
        items:
          type: string
        type: array
      dns_app_names:
        items:
          type: string
        type: array
      http_app_names:
        items:
          type: string
        type: array
      jvm_app_names:
        items:
          type: string
        type: array
      network_pairs:
        items:
          $ref: '#/definitions/handler.Pair'
        type: array
    type: object
  propagation.MapCarrier:
    additionalProperties:
      type: string
    type: object
host: localhost:8080
info:
  contact:
    email: team@rcabench.com
    name: RCABench Team
  description: |-
    RCABench - A comprehensive root cause analysis benchmarking platform for microservices
    This API provides endpoints for managing datasets, algorithms, evaluations, and fault injections
    for root cause analysis in distributed systems and microservices architectures.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: RCABench API
  version: 1.0.1
paths:
  /api/v1/algorithms:
    get:
      description: 获取系统中所有可用的算法列表，包括算法的镜像信息、标签和更新时间。只返回状态为激活的算法容器
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回算法列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_ListAlgorithmsResp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取算法列表
      tags:
      - algorithm
    post:
      description: 批量提交算法执行任务，支持多个算法和数据集的组合执行。系统将为每个执行任务分配唯一的 TraceID 用于跟踪任务状态和结果
      parameters:
      - description: 算法执行请求列表，包含算法名称、数据集和环境变量
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.ExecutionPayload'
          type: array
      produces:
      - application/json
      responses:
        "202":
          description: 成功提交算法执行任务，返回任务跟踪信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SubmitResp'
        "400":
          description: 请求参数错误，如JSON格式不正确、算法名称或数据集名称无效、环境变量名称不支持等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 提交算法执行任务
      tags:
      - algorithm
  /api/v1/analyzers/injections:
    get:
      description: 使用多种筛选条件分析故障注入数据，返回包括效率、多样性、种子之间的距离等统计信息
      parameters:
      - description: 项目名称过滤
        in: query
        name: project_name
        type: string
      - default: prod
        description: 环境标签过滤
        enum:
        - dev
        - prod
        in: query
        name: env
        type: string
      - description: 批次标签过滤
        in: query
        name: batch
        type: string
      - default: train
        description: 分类标签过滤
        enum:
        - train
        - test
        in: query
        name: tag
        type: string
      - default: clickhouse
        description: 基准测试类型过滤
        enum:
        - clickhouse
        in: query
        name: benchmark
        type: string
      - default: 0
        description: 状态过滤，具体值参考字段映射接口(/mapping)
        in: query
        name: status
        type: integer
      - default: 0
        description: 故障类型过滤，具体值参考字段映射接口(/mapping)
        in: query
        name: fault_type
        type: integer
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回故障注入分析统计信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_AnalyzeInjectionsResp'
        "400":
          description: 请求参数错误，如参数格式不正确、验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 分析故障注入数据
      tags:
      - analyzer
  /api/v1/analyzers/traces:
    get:
      description: 使用多种筛选条件分析链路数据，返回包括故障注入结束链路在内的统计信息
      parameters:
      - description: 首任务类型筛选
        in: query
        name: first_task_type
        type: string
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回链路分析统计信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_TraceStats'
        "400":
          description: 请求参数错误，如参数格式不正确、验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 分析链路数据
      tags:
      - trace
  /api/v1/containers:
    post:
      consumes:
      - multipart/form-data
      description: 通过上传文件、指定GitHub仓库或Harbor镜像来构建Docker镜像。支持zip和tar.gz格式的文件上传，或从GitHub仓库自动拉取代码进行构建，或从Harbor直接获取已存在的镜像并更新数据库。系统会自动验证必需文件（Dockerfile）并设置执行权限
      parameters:
      - default: algorithm
        description: 容器类型，指定容器的用途
        enum:
        - algorithm
        - benchmark
        in: formData
        name: type
        type: string
      - description: 容器名称，用于标识容器，将作为镜像构建的标识符，默认使用info.toml中的name字段
        in: formData
        name: name
        type: string
      - description: Docker镜像名称。当source_type为harbor时，指定Harbor中已存在的镜像名称；其他情况下支持以下格式：1)
          image-name（自动添加默认Harbor地址和命名空间）2) namespace/image-name（自动添加默认Harbor地址）
        in: formData
        name: image
        required: true
        type: string
      - default: latest
        description: Docker镜像标签。当source_type为harbor时，指定Harbor中已存在的镜像标签；其他情况下用于版本控制
        in: formData
        name: tag
        type: string
      - default: bash /entrypoint.sh
        description: Docker镜像启动命令，默认为bash /entrypoint.sh
        in: formData
        name: command
        type: string
      - collectionFormat: csv
        description: 环境变量名称列表，支持多个环境变量
        in: formData
        items:
          type: string
        name: env_vars
        type: array
      - default: file
        description: 构建源类型，指定源码来源
        enum:
        - file
        - github
        - harbor
        in: formData
        name: source_type
        type: string
      - description: 源码文件（支持zip或tar.gz格式），当source_type为file时必需，文件大小限制5MB
        in: formData
        name: file
        type: file
      - description: GitHub访问令牌，用于访问私有仓库，公开仓库可不提供
        in: formData
        name: github_token
        type: string
      - description: GitHub仓库地址，格式：owner/repo，当source_type为github时必需
        in: formData
        name: github_repo
        type: string
      - default: main
        description: GitHub分支名，指定要构建的分支
        in: formData
        name: github_branch
        type: string
      - description: GitHub commit哈希值（支持短hash），如果指定commit则忽略branch参数
        in: formData
        name: github_commit
        type: string
      - default: .
        description: 仓库内的子目录路径，如果源码不在根目录
        in: formData
        name: github_path
        type: string
      - default: .
        description: Docker构建上下文路径，相对于源码根目录
        in: formData
        name: context_dir
        type: string
      - default: Dockerfile
        description: Dockerfile路径，相对于源码根目录
        in: formData
        name: dockerfile_path
        type: string
      - description: Dockerfile构建目标（multi-stage build时使用）
        in: formData
        name: target
        type: string
      - default: false
        description: 是否强制重新构建镜像，忽略缓存
        in: formData
        name: force_rebuild
        type: boolean
      produces:
      - application/json
      responses:
        "202":
          description: 成功提交容器构建任务，返回任务跟踪信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SubmitResp'
        "400":
          description: 请求参数错误：文件格式不支持（仅支持zip、tar.gz）、文件大小超限（5MB）、参数验证失败、GitHub仓库地址无效、Harbor镜像参数无效、force_rebuild值格式错误等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: 资源不存在：构建上下文路径不存在、缺少必需文件（Dockerfile、entrypoint.sh）、Harbor中镜像不存在
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 提交镜像构建任务
      tags:
      - container
  /api/v1/datasets:
    delete:
      description: 删除数据集数据
      parameters:
      - collectionFormat: csv
        description: 数据集名称列表
        in: query
        items:
          type: string
        name: names
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_DatasetDeleteResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 删除数据集数据
      tags:
      - dataset
    post:
      consumes:
      - application/json
      description: 根据指定的时间范围和基准测试容器批量构建数据集。
      parameters:
      - description: 数据集构建请求列表，每个请求包含数据集名称、时间范围、基准测试和环境变量配置
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.DatasetBuildPayload'
          type: array
      produces:
      - application/json
      responses:
        "202":
          description: 成功提交数据集构建任务，返回任务组ID和跟踪信息列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SubmitResp'
        "400":
          description: 请求参数错误：1) JSON格式不正确 2) 数据集名称为空 3) 时间范围无效 4) 基准测试不存在 5) 环境变量名称不支持
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 批量构建数据集
      tags:
      - dataset
  /api/v1/datasets/download:
    get:
      description: 将指定的多个数据集打包为 ZIP 文件下载，自动排除 result.csv 和检测器结论文件。支持按组ID或数据集名称进行下载，两种方式二选一。下载文件结构：按组ID下载时为
        datasets/{groupId}/{datasetName}/...，按名称下载时为 datasets/{datasetName}/...
      parameters:
      - collectionFormat: csv
        description: 任务组ID列表，格式：group1,group2,group3。与names参数二选一，优先使用group_ids
        in: query
        items:
          type: string
        name: group_ids
        type: array
      - collectionFormat: csv
        description: 数据集名称列表，格式：dataset1,dataset2,dataset3。与group_ids参数二选一
        in: query
        items:
          type: string
        name: names
        type: array
      produces:
      - application/zip
      responses:
        "200":
          description: ZIP 文件流，Content-Disposition 头中包含文件名 datasets.zip
          schema:
            type: string
        "400":
          description: 请求参数错误：1) 参数绑定失败 2) 两个参数都为空 3) 同时提供两种参数
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "403":
          description: 权限错误：请求访问的数据集路径不在系统允许的范围内
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 下载数据集打包文件
      tags:
      - dataset
  /api/v1/debug/ns/status:
    get:
      description: 获取命名空间锁状态信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取命名空间锁状态
      tags:
      - debug
  /api/v1/evaluations/executions:
    get:
      description: 获取所有ExecutionResult中status为ExecutionSuccess的记录，支持时间区间筛选和数量筛选
      parameters:
      - description: 开始时间，格式：2006-01-02T15:04:05Z07:00
        in: query
        name: start_time
        type: string
      - description: 结束时间，格式：2006-01-02T15:04:05Z07:00
        in: query
        name: end_time
        type: string
      - description: 数量限制
        in: query
        name: limit
        type: integer
      - description: 偏移量，用于分页
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回成功执行的算法记录列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SuccessfulExecutionsResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取成功执行的算法记录
      tags:
      - evaluation
  /api/v1/evaluations/groundtruth:
    post:
      description: 根据数据集数组获取对应的 ground truth 数据，用于算法评估的基准数据。支持批量查询多个数据集的真实标签信息
      parameters:
      - description: Ground truth查询请求，包含数据集列表
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.GroundTruthReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回数据集的ground truth信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_GroundTruthResp'
        "400":
          description: 请求参数错误，如JSON格式不正确、数据集数组为空
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取数据集的 ground truth
      tags:
      - evaluation
  /api/v1/evaluations/raw-data:
    post:
      description: 支持三种查询模式：1) 直接传入算法-数据集对数组进行精确查询；2) 传入算法和数据集列表进行笛卡尔积查询；3) 通过执行ID列表查询。三种模式互斥，只能选择其中一种
      parameters:
      - description: 原始数据查询请求，支持三种模式：pairs数组、(algorithms+datasets)笛卡尔积、或execution_ids列表
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RawDataReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回原始评估数据列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RawDataResp'
        "400":
          description: 请求参数错误，如JSON格式不正确、查询模式冲突或参数为空
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取原始评估数据
      tags:
      - evaluation
  /api/v1/injections:
    get:
      description: 支持排序、过滤的故障注入记录查询接口。返回数据库原始记录列表，不进行数据转换。
      parameters:
      - description: 项目名称过滤
        in: query
        name: project_name
        type: string
      - default: prod
        description: 环境标签过滤
        enum:
        - dev
        - prod
        in: query
        name: env
        type: string
      - description: 批次标签过滤
        in: query
        name: batch
        type: string
      - default: train
        description: 分类标签过滤
        enum:
        - train
        - test
        in: query
        name: tag
        type: string
      - default: clickhouse
        description: 基准测试类型过滤
        enum:
        - clickhouse
        in: query
        name: benchmark
        type: string
      - default: 0
        description: 状态过滤，具体值参考字段映射接口(/mapping)
        in: query
        name: status
        type: integer
      - default: 0
        description: 故障类型过滤，具体值参考字段映射接口(/mapping)
        in: query
        name: fault_type
        type: integer
      - default: created_at
        description: 排序字段，默认created_at
        in: query
        name: sort_field
        type: string
      - default: desc
        description: 排序方式，默认desc
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - default: 0
        description: 结果数量限制，用于控制返回记录数量
        in: query
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: 分页查询，页码
        in: query
        minimum: 0
        name: page_num
        type: integer
      - default: 0
        description: 分页查询，每页数量
        in: query
        minimum: 0
        name: page_size
        type: integer
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回故障注入记录列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_ListInjectionsResp'
        "400":
          description: 请求参数错误，如参数格式不正确、验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取故障注入记录列表
      tags:
      - injection
    post:
      description: 提交故障注入任务，支持批量提交多个故障配置，系统会自动去重并返回提交结果
      parameters:
      - description: 故障注入请求体
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.SubmitInjectionReq'
      produces:
      - application/json
      responses:
        "202":
          description: 成功提交故障注入任务
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SubmitInjectionResp'
        "400":
          description: 请求参数错误，如JSON格式不正确、参数验证失败或算法无效等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 提交故障注入任务
      tags:
      - injection
  /api/v1/injections/{task_id}/cancel:
    put:
      description: 取消指定的故障注入任务
      parameters:
      - description: 任务ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_InjectCancelResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 取消故障注入任务
      tags:
      - injection
  /api/v1/injections/analysis/no-issues:
    get:
      description: 根据时间范围查询所有没有问题的故障注入记录列表，返回包含配置信息的详细记录
      parameters:
      - description: 环境标签过滤
        in: query
        name: env
        type: string
      - description: 批次标签过滤
        in: query
        name: batch
        type: string
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回没有问题的故障注入记录列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-array_dto_FaultInjectionNoIssuesResp'
        "400":
          description: 请求参数错误，如时间格式不正确或参数验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 查询没有问题的故障注入记录
      tags:
      - injection
  /api/v1/injections/analysis/stats:
    get:
      description: 获取故障注入记录的统计信息，包括有问题、没有问题和总记录数量
      parameters:
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回故障注入统计信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_InjectionStatsResp'
        "400":
          description: 请求参数错误，如时间格式不正确或参数验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取故障注入统计信息
      tags:
      - injection
  /api/v1/injections/analysis/with-issues:
    get:
      description: 根据时间范围查询所有有问题的故障注入记录列表
      parameters:
      - description: 环境标签过滤
        in: query
        name: env
        type: string
      - description: 批次标签过滤
        in: query
        name: batch
        type: string
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-array_dto_FaultInjectionWithIssuesResp'
        "400":
          description: 请求参数错误，如时间格式不正确或参数验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 查询有问题的故障注入记录
      tags:
      - injection
  /api/v1/injections/conf:
    get:
      description: 获取指定命名空间的故障注入配置信息，支持不同显示模式的配置树结构
      parameters:
      - description: 命名空间，指定要获取配置的命名空间
        in: query
        name: namespace
        required: true
        type: string
      - default: engine
        description: 显示模式
        enum:
        - display
        - engine
        in: query
        name: mode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回配置树结构
          schema:
            $ref: '#/definitions/dto.GenericResponse-handler_Node'
        "400":
          description: 请求参数错误，如命名空间或模式参数缺失
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取故障注入配置
      tags:
      - injection
  /api/v1/injections/configs:
    get:
      description: 根据多个TraceID获取对应的故障注入配置信息，用于查看已提交的故障注入任务的配置详情
      parameters:
      - collectionFormat: multi
        description: TraceID列表，支持多个值，用于查询对应的配置信息
        in: query
        items:
          type: string
        name: trace_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回配置列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: 请求参数错误，如TraceID参数缺失或格式不正确
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取已注入故障配置列表
      tags:
      - injection
  /api/v1/injections/mapping:
    get:
      description: 获取状态和故障类型的字符串与数字映射关系，用于前端显示和API参数验证
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回字段映射关系
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_InjectionFieldMappingResp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取字段映射关系
      tags:
      - injection
  /api/v1/injections/ns-resources:
    get:
      description: 获取所有命名空间及其对应的资源信息映射，或查询指定命名空间的资源信息。返回命名空间到资源的映射表，用于故障注入配置和资源管理
      parameters:
      - description: 命名空间名称，不指定时返回所有命名空间的资源映射
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 指定命名空间时返回该命名空间的资源信息
          schema:
            $ref: '#/definitions/dto.GenericResponse-handler_Resources'
        "404":
          description: 指定的命名空间不存在
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误，无法获取资源映射
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取命名空间资源映射
      tags:
      - injection
  /api/v1/injections/query:
    get:
      description: 根据名称或任务ID查询故障注入记录详情，两个参数至少提供一个
      parameters:
      - description: 故障注入名称
        in: query
        name: name
        type: string
      - description: 任务ID
        in: query
        name: task_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回故障注入记录详情
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_QueryInjectionResp'
        "400":
          description: 请求参数错误，如参数缺失、格式不正确或验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 查询单个故障注入记录
      tags:
      - injection
  /api/v1/tasks:
    get:
      description: 根据多种条件分页获取任务列表。支持按任务ID、跟踪ID、组ID进行精确查询，或按任务类型、状态等进行过滤查询
      parameters:
      - description: 任务ID - 精确匹配特定任务 (与trace_id、group_id互斥)
        in: query
        name: task_id
        type: string
      - description: 跟踪ID - 查找属于同一跟踪的所有任务 (与task_id、group_id互斥)
        in: query
        name: trace_id
        type: string
      - description: 组ID - 查找属于同一组的所有任务 (与task_id、trace_id互斥)
        in: query
        name: group_id
        type: string
      - description: 任务类型过滤
        enum:
        - RestartService
        - FaultInjection
        - BuildDataset
        - RunAlgorithm
        - CollectResult
        - BuildImage
        in: query
        name: task_type
        type: string
      - description: 任务状态过滤
        enum:
        - Pending
        - Running
        - Completed
        - Error
        - Cancelled
        - Scheduled
        - Rescheduled
        in: query
        name: status
        type: string
      - description: 是否立即执行 - true:立即执行任务, false:延时执行任务
        in: query
        name: immediate
        type: boolean
      - default: created_at
        description: 排序字段，默认created_at
        in: query
        name: sort_field
        type: string
      - default: desc
        description: 排序方式，默认desc
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - description: 结果数量限制，用于控制返回记录数量
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: 时间范围查询，支持自定义相对时间(1h/24h/7d)或custom 默认不设置
        in: query
        name: lookback
        type: string
      - description: 自定义开始时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_start_time
        type: string
      - description: 自定义结束时间，RFC3339格式，当lookback=custom时必需
        format: date-time
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回故障注入记录列表
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_ListTasksResp'
        "400":
          description: 请求参数错误，如参数格式不正确、验证失败等
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取任务列表
      tags:
      - task
  /api/v1/tasks/{task_id}:
    get:
      description: 根据任务ID获取任务详细信息,包括任务基本信息和执行日志
      parameters:
      - description: 任务ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_TaskDetailResp'
        "400":
          description: 无效的任务ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取任务详情
      tags:
      - task
  /api/v1/tasks/queue:
    get:
      description: 分页获取队列中等待执行的任务列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_PaginationResp-dto_UnifiedTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取队列中的任务
      tags:
      - task
  /api/v1/traces/completed:
    get:
      description: 根据指定的时间范围获取完成状态的链路
      parameters:
      - description: 相对时间查询，如 1h, 24h, 7d或者是custom
        in: query
        name: lookback
        type: string
      - description: 当lookback=custom时必需，自定义开始时间(RFC3339格式)
        in: query
        name: custom_start_time
        type: string
      - description: 当lookback=custom时必需，自定义结束时间(RFC3339格式)
        in: query
        name: custom_end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_GetCompletedMapResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: 获取完成状态的链路
      tags:
      - trace
  /api/v2/audit:
    get:
      description: Get paginated list of audit logs with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Filter by user ID
        in: query
        name: user_id
        type: integer
      - description: Filter by action
        in: query
        name: action
        type: string
      - description: Filter by resource
        in: query
        name: resource
        type: string
      - description: Filter by success status
        in: query
        name: success
        type: boolean
      - description: Filter from date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Filter to date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Audit logs retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_AuditLogListResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: List audit logs
      tags:
      - System
    post:
      consumes:
      - application/json
      description: Create a new audit log entry
      parameters:
      - description: Audit log data
        in: body
        name: audit_log
        required: true
        schema:
          $ref: '#/definitions/dto.AuditLogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Audit log created successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_AuditLogResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Create audit log
      tags:
      - System
  /api/v2/audit/{id}:
    get:
      description: Get a specific audit log entry by ID
      parameters:
      - description: Audit log ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Audit log retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_AuditLogResponse'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Audit log not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: Get audit log by ID
      tags:
      - System
  /api/v2/auth/change-password:
    post:
      consumes:
      - application/json
      description: Change password for authenticated user
      parameters:
      - description: Password change request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "401":
          description: Unauthorized or invalid old password
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - Authentication
  /api/v2/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: User login
      tags:
      - Authentication
  /api/v2/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate token
      parameters:
      - description: Logout request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: User logout
      tags:
      - Authentication
  /api/v2/auth/profile:
    get:
      description: Get profile information for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - Authentication
  /api/v2/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh an existing JWT token
      parameters:
      - description: Token refresh request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TokenRefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_TokenRefreshResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: Refresh JWT token
      tags:
      - Authentication
  /api/v2/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserInfo'
        "400":
          description: Invalid request or validation error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: User registration
      tags:
      - Authentication
  /api/v2/health:
    get:
      description: Get system health status and service information
      produces:
      - application/json
      responses:
        "200":
          description: Health check successful
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_HealthCheckResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: System health check
      tags:
      - System
  /api/v2/monitor/info:
    get:
      description: Get basic system information and status
      produces:
      - application/json
      responses:
        "200":
          description: System info retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SystemInfo'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: Get system information
      tags:
      - System
  /api/v2/monitor/metrics:
    post:
      consumes:
      - application/json
      description: Query monitoring metrics for system performance
      parameters:
      - description: Metrics query request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.MonitoringQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Metrics retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_MonitoringMetricsResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: Get monitoring metrics
      tags:
      - System
  /api/v2/permissions:
    get:
      description: Get paginated list of permissions with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Filter by action
        in: query
        name: action
        type: string
      - description: Filter by resource ID
        in: query
        name: resource_id
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: integer
      - description: Filter by system permission
        in: query
        name: is_system
        type: boolean
      - description: Filter by permission name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Permissions retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_PermissionListResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: List permissions
      tags:
      - Permissions
    post:
      consumes:
      - application/json
      description: Create a new permission with specified resource and action
      parameters:
      - description: Permission creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Permission created successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_PermissionResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "409":
          description: Permission already exists
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Create a new permission
      tags:
      - Permissions
  /api/v2/permissions/{id}:
    delete:
      description: Delete a permission (soft delete by setting status to -1)
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permission deleted successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid permission ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "403":
          description: Cannot delete system permission
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Delete permission
      tags:
      - Permissions
    get:
      description: Get detailed information about a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permission retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_PermissionResponse'
        "400":
          description: Invalid permission ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get permission by ID
      tags:
      - Permissions
    put:
      consumes:
      - application/json
      description: Update permission information (partial update supported)
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Permission update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission updated successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_PermissionResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Update permission
      tags:
      - Permissions
  /api/v2/permissions/{id}/roles:
    get:
      description: Get list of roles that have been assigned a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Roles retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-array_dto_RoleResponse'
        "400":
          description: Invalid permission ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get permission roles
      tags:
      - Permissions
  /api/v2/permissions/resource/{resource_id}:
    get:
      description: Get list of permissions associated with a specific resource
      parameters:
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permissions retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-array_dto_PermissionResponse'
        "400":
          description: Invalid resource ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get permissions by resource
      tags:
      - Permissions
  /api/v2/permissions/search:
    post:
      consumes:
      - application/json
      description: Search permissions with complex filtering and sorting
      parameters:
      - description: Permission search request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.PermissionSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permissions retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SearchResponse-dto_PermissionResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Search permissions
      tags:
      - Permissions
  /api/v2/relations:
    get:
      description: Get paginated list of relationships with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Relationship type
        in: query
        name: type
        type: string
      - description: Source entity type
        in: query
        name: source_type
        type: string
      - description: Target entity type
        in: query
        name: target_type
        type: string
      - description: Source entity ID
        in: query
        name: source_id
        type: integer
      - description: Target entity ID
        in: query
        name: target_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relations retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RelationListResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: List relationships
      tags:
      - Relations
  /api/v2/relations/batch:
    post:
      consumes:
      - application/json
      description: Perform multiple relationship operations in a single request
      parameters:
      - description: Batch relation operations request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BatchRelationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Batch operations completed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Batch relationship operations
      tags:
      - Relations
  /api/v2/relations/role-permissions:
    delete:
      consumes:
      - application/json
      description: Remove multiple permissions from a role
      parameters:
      - description: Role permission removal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RemoveRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permissions removed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Remove permissions from role
      tags:
      - Relations
    post:
      consumes:
      - application/json
      description: Assign multiple permissions to a role
      parameters:
      - description: Role permission assignment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AssignRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permissions assigned successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role or permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Assign permissions to role
      tags:
      - Relations
  /api/v2/relations/statistics:
    get:
      description: Get statistics about all relationship types in the system
      produces:
      - application/json
      responses:
        "200":
          description: Statistics retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RelationStatisticsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get relationship statistics
      tags:
      - Relations
  /api/v2/relations/user-permissions:
    delete:
      consumes:
      - application/json
      description: Remove a permission directly from a user
      parameters:
      - description: User permission removal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RemoveUserPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission removed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Remove permission from user
      tags:
      - Relations
    post:
      consumes:
      - application/json
      description: Assign a permission directly to a user (with optional project scope)
      parameters:
      - description: User permission assignment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AssignUserPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission assigned successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User or permission not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Assign permission to user
      tags:
      - Relations
  /api/v2/relations/user-roles:
    delete:
      consumes:
      - application/json
      description: Remove a role from a user (global role removal)
      parameters:
      - description: User role removal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RemoveUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Role removed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User or role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Remove role from user
      tags:
      - Relations
    post:
      consumes:
      - application/json
      description: Assign a role to a user (global role assignment)
      parameters:
      - description: User role assignment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AssignUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Role assigned successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User or role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Assign role to user
      tags:
      - Relations
  /api/v2/roles:
    get:
      description: Get paginated list of roles with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Filter by role type
        in: query
        name: type
        type: string
      - description: Filter by status
        in: query
        name: status
        type: integer
      - description: Filter by system role
        in: query
        name: is_system
        type: boolean
      - description: Filter by role name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Roles retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RoleListResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: List roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create a new role with specified permissions
      parameters:
      - description: Role creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Role created successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RoleResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "409":
          description: Role already exists
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Create a new role
      tags:
      - Roles
  /api/v2/roles/{id}:
    delete:
      description: Delete a role (soft delete by setting status to -1)
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role deleted successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "403":
          description: Cannot delete system role
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Delete role
      tags:
      - Roles
    get:
      description: Get detailed information about a specific role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RoleResponse'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get role by ID
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update role information (partial update supported)
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Role updated successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_RoleResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - Roles
  /api/v2/roles/{id}/permissions:
    delete:
      consumes:
      - application/json
      description: Remove multiple permissions from a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Permission removal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RemovePermissionFromRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permissions removed successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Remove permissions from role
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Assign multiple permissions to a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Permission assignment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AssignPermissionToRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permissions assigned successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Assign permissions to role
      tags:
      - Roles
  /api/v2/roles/{id}/users:
    get:
      description: Get list of users assigned to a specific role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-array_dto_UserResponse'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: Role not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get role users
      tags:
      - Roles
  /api/v2/roles/search:
    post:
      consumes:
      - application/json
      description: Search roles with complex filtering and sorting
      parameters:
      - description: Role search request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RoleSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Roles retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SearchResponse-dto_RoleResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Search roles
      tags:
      - Roles
  /api/v2/statistics:
    get:
      description: Get comprehensive system statistics and metrics
      produces:
      - application/json
      responses:
        "200":
          description: Statistics retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SystemStatisticsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      summary: Get system statistics
      tags:
      - System
  /api/v2/users:
    get:
      description: Get paginated list of users with optional filtering
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: size
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: integer
      - description: Filter by active status
        in: query
        name: is_active
        type: boolean
      - description: Filter by username
        in: query
        name: username
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      - description: Filter by full name
        in: query
        name: full_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserListResponse'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user account with specified details
      parameters:
      - description: User creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Create a new user
      tags:
      - Users
  /api/v2/users/{id}:
    delete:
      description: Delete a user (soft delete by setting status to -1)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - Users
    get:
      description: Get detailed information about a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserResponse'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user information (partial update supported)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_UserResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - Users
  /api/v2/users/{id}/projects:
    post:
      consumes:
      - application/json
      description: Assign a user to a project with a specific role
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project assignment request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AssignUserToProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User assigned to project successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Assign user to project
      tags:
      - Users
  /api/v2/users/{id}/projects/{project_id}:
    delete:
      description: Remove a user from a project
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User removed from project successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Remove user from project
      tags:
      - Users
  /api/v2/users/search:
    post:
      consumes:
      - application/json
      description: Search users with complex filtering and sorting
      parameters:
      - description: User search request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            $ref: '#/definitions/dto.GenericResponse-dto_SearchResponse-dto_UserResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.GenericResponse-any'
      security:
      - BearerAuth: []
      summary: Search users
      tags:
      - Users
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
