apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-rcabench-config
data:
  config.prod.toml: |
    name = "{{ .Values.configmap.name }}"
    version = "{{ .Values.configmap.version }}"
    port = {{ .Values.configmap.port }}
    workspace = "{{ .Values.configmap.workspace }}"

    [system]
    env_mode = "{{ .Values.configmap.system.env_mode }}"
    timezone = "{{ .Values.configmap.system.timezone }}"

    [initialization]
    data_path = "{{ .Values.configmap.initialization.data_path }}"

    [injection]
    benchmark = {{ .Values.configmap.injection.benchmark | toJson }}
    target_label_key = "{{ .Values.configmap.injection.target_label_key }}"
    {{- with .Values.configmap.injection.namespace_config }}
    [injection.namespace_config]
    {{- range $key, $value := . }}
    [injection.namespace_config.{{ $key }}]
    count = {{ $value.count }}
    {{- end }}
    {{- end }}

    [database]
    clickhouse_host = "{{ .Values.configmap.database.clickhouse_host }}"
    mysql_user = "{{ .Values.configmap.database.mysql_user }}"
    mysql_password = "{{ .Values.configmap.database.mysql_password }}"
    mysql_host = "{{ .Release.Name }}-mysql"
    mysql_port = "{{ .Values.configmap.database.mysql_port }}"
    mysql_db = "{{ .Values.configmap.database.mysql_db }}"

    [jaeger]
    endpoint = "{{ .Release.Name }}-jaeger:4318"

    [redis]
    host = "{{ .Release.Name }}-redis:6379"

    [harbor]
    registry = "{{ .Values.configmap.harbor.registry }}"
    namespace = "{{ .Values.configmap.harbor.namespace }}"
    username = "{{ .Values.configmap.harbor.username }}"
    password = "{{ .Values.configmap.harbor.password }}"

    [k8s]
    namespace = "{{ .Values.configmap.k8s.namespace }}"
    {{- range $key, $value := .Values.configmap.k8s.job.volume_mount }}
    [k8s.job.volume_mount.{{ $key }}]
    name = {{ $value.name | quote }}
    mount_path = {{ $value.mount_path | quote }}
    {{- if $value.host_path }}
    host_path = {{ $value.host_path | quote }}
    type = {{ $value.type | quote }}
    {{- end }}
    {{- if $value.source_type }}
    source_type = {{ $value.source_type | quote }}
    {{- end }}
    {{- if $value.sub_path }}
    sub_path = {{ $value.sub_path | quote }}
    {{- end }}
    {{- if $value.secret_name }}
    secret_name = {{ $value.secret_name | quote }}
    {{- end }}
    {{- end }}

    [logging]
    dir = "{{ .Values.configmap.logging.dir }}"
    [logging.job]
    dir = "{{ .Values.configmap.logging.job.dir }}"
    log_retention_days = {{ .Values.configmap.logging.job.log_retention_days }}

    [jfs]
    path = "{{ .Values.configmap.jfs.path }}"

    [algo]
    detector = "{{ .Values.configmap.algo.detector }}"

    [container]
    storage_path = "{{ .Values.configmap.container.storage_path }}"

    [debugging]
    enable = {{ .Values.configmap.debugging.enable }}

    [buildkit]
    address = "{{ .Release.Name }}-buildkit:1234"

    [rate_limiting]
    max_concurrent_builds = {{ .Values.configmap.rate_limiting.max_concurrent_builds }}
    max_concurrent_restarts = {{ .Values.configmap.rate_limiting.max_concurrent_restarts }}
    max_concurrent_algo_execution = {{ .Values.configmap.rate_limiting.max_concurrent_algo_execution }}
    token_wait_timeout = {{ .Values.configmap.rate_limiting.token_wait_timeout }}    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-buildkit-config
data:
  buildkitd.toml: |
    debug = true
    trace = false
    insecure-entitlements = ["security.insecure"]

    [grpc]
    address = ["tcp://0.0.0.0:1234"]

    [registry."10.10.10.240"]
    http = false
    ca = ["/usr/local/share/ca-certificates/harbor.lab.pj.crt"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-initial-data
data:
  data.json: |
{{ .Files.Get "files/initial_data/data.json" | indent 4 }}

