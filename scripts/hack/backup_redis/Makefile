# =============================================================================
# Backup-redis Makefile
# =============================================================================
# 这个Makefile提供了Backup-redis工具的快捷命令
# 使用 'make help' 查看所有可用命令

# =============================================================================
# 配置变量
# =============================================================================

# 颜色定义
BLUE    := \033[1;34m
GREEN   := \033[1;32m
YELLOW  := \033[1;33m
RED     := \033[1;31m
CYAN    := \033[1;36m
GRAY    := \033[90m
RESET   := \033[0m

# =============================================================================
# 声明所有非文件目标
# =============================================================================
.PHONY: help restore-loacl

# =============================================================================
# 默认目标
# =============================================================================
.DEFAULT_GOAL := help

# =============================================================================
# 帮助信息
# =============================================================================
help: ## 📖 显示所有可用命令
	@awk 'BEGIN { \
		FS = ":.*##"; \
		printf "$(YELLOW)可用命令:$(RESET)\n"; \
	} \
	/^##@/ { \
		header = substr($$0, 5); \
		printf "\n$(GREEN)▶ %s$(RESET)\n", header; \
	} \
	/^[a-zA-Z_-]+:.*?##/ { \
		printf "  $(CYAN)%-25s$(RESET) $(GRAY)%s$(RESET)\n", $$1, $$2; \
	}' $(MAKEFILE_LIST)

# =============================================================================
# 转存
# =============================================================================
restore-local: ## 📦 从正式环境转存到本地 Redis
	@read -p "选择匹配方式 - 精准匹配 (y) 或 模糊匹配 (N): " choice; \
	if [ "$$choice" = "y" ] || [ "$$choice" = "Y" ]; then \
		echo "$(BLUE)使用精准匹配模式...$(RESET)"; \
		uv run python cli.py restore-batch --exact_match --overwrite; \
	else \
		read -p "输入模糊匹配模式: " pattern; \
		echo "$(BLUE)使用模糊匹配模式: $$pattern$(RESET)"; \
		uv run python cli.py restore-batch --source_pattern "$$pattern" --overwrite; \
	fi