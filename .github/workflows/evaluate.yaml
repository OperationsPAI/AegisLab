name: Evaluate Root Cause Localization Algorithm

on:
  pull_request:
    branches: [ main ]

jobs:
  evaluate:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Builder Docker Image
        run: |
          ALGO_DIR=$(basename "${{ github.head_ref }}")
          docker build -f algorithms/${ALGO_DIR}/builder.Dockerfile -t builder:${{ github.sha }} algorithms/${ALGO_DIR}

      - name: Build Runner Docker Image
        run: |
          ALGO_DIR=$(basename "${{ github.head_ref }}")
          docker build -f algorithms/${ALGO_DIR}/runner.Dockerfile -t runner:${{ github.sha }} algorithms/${ALGO_DIR}

      - name: Run Evaluation
        run: |
          ALGO_DIR=$(basename "${{ github.head_ref }}")
          docker run --rm \
            -v ${{ github.workspace }}/data/test_cases/:/data/test_cases/ \
            -v ${{ github.workspace }}/data/datasets/:/data/datasets/ \
            runner:${{ github.sha }} \
            python rca.py --test_cases /data/test_cases/ --datasets /data/datasets/

      - name: Collect Evaluation Report
        run: |
          mkdir -p reports
          docker cp $(docker ps -alq):/app/reports/evaluation_report.json reports/evaluation_report.json

      - name: Upload Evaluation Report
        uses: actions/upload-artifact@v3
        with:
          name: evaluation-report
          path: reports/

      - name: Generate Markdown Report
        run: |
          python scripts/generate_report.py reports/evaluation_report.json reports/evaluation_report.md

      - name: Comment on PR with Report
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ### 评估结果
            - **准确率**: ${{ steps.collect.outputs.accuracy }}
            - **时间消耗**: ${{ steps.collect.outputs.time }} 秒
            - **内存使用**: ${{ steps.collect.outputs.memory }} MB